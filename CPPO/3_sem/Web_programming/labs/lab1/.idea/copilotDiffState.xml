<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/org/example/Config.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/example/Config.java" />
              <option name="originalContent" value="package org.example;&#10;&#10;import java.math.BigDecimal;&#10;&#10;public class Config {&#10;  public static final BigDecimal X_MIN = new BigDecimal(&quot;-4&quot;);&#10;  public static final BigDecimal X_MAX = new BigDecimal(&quot;4&quot;);&#10;  public static final BigDecimal Y_MIN = new BigDecimal(&quot;-3&quot;);&#10;  public static final BigDecimal Y_MAX = new BigDecimal(&quot;5&quot;);&#10;  public static final BigDecimal R_MIN = BigDecimal.ONE;&#10;  public static final BigDecimal R_MAX = new BigDecimal(&quot;3&quot;);&#10;}" />
              <option name="updatedContent" value="package org.example;&#10;&#10;import java.math.BigDecimal;&#10;&#10;public class Config {&#10;  public static final BigDecimal X_MIN = new BigDecimal(&quot;-4&quot;);&#10;  public static final BigDecimal X_MAX = new BigDecimal(&quot;4&quot;);&#10;  public static final BigDecimal Y_MIN = new BigDecimal(&quot;-3&quot;);&#10;  public static final BigDecimal Y_MAX = new BigDecimal(&quot;5&quot;);&#10;  public static final BigDecimal R_MIN = BigDecimal.ONE;&#10;  public static final BigDecimal R_MAX = new BigDecimal(&quot;3&quot;);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/www/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/www/index.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;ru&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Лабораторная работа №1 - Проверка попадания точки в область&lt;/title&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;!-- Шапка с информацией о студенте --&gt;&#10;&lt;header class=&quot;header&quot;&gt;&#10;    &lt;div class=&quot;header-content&quot;&gt;&#10;        &lt;div class=&quot;header-left&quot;&gt;&#10;            &lt;h1 class=&quot;main-title&quot;&gt;Лабораторная работа №1&lt;/h1&gt;&#10;            &lt;p class=&quot;subtitle&quot;&gt;Проверка попадания точки в область&lt;/p&gt;&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;student-info&quot;&gt;&#10;            &lt;div class=&quot;info-card&quot;&gt;&#10;                &lt;p&gt;&lt;span class=&quot;info-label&quot;&gt;ФИО:&lt;/span&gt; Мантуш Даниил Валерьевич&lt;/p&gt;&#10;                &lt;p&gt;&lt;span class=&quot;info-label&quot;&gt;Группа:&lt;/span&gt; P3219&lt;/p&gt;&#10;                &lt;p&gt;&lt;span class=&quot;info-label&quot;&gt;Вариант:&lt;/span&gt; 434931&lt;/p&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/header&gt;&#10;&#10;&lt;main class=&quot;main-container&quot;&gt;&#10;    &lt;!-- Форма ввода данных --&gt;&#10;    &lt;section class=&quot;input-section ios-card&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;&#10;            Введите координаты точки&#10;        &lt;/h2&gt;&#10;        &lt;form id=&quot;coordinateForm&quot; class=&quot;coordinate-form&quot;&gt;&#10;            &lt;!-- Координата X - Radio кнопки --&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label class=&quot;form-label&quot;&gt;&#10;                    Координата X:&#10;                &lt;/label&gt;&#10;                &lt;div class=&quot;x-radios&quot; id=&quot;x-radios&quot;&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;-4&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;-4&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;-3&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;-3&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;-2&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;-2&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;-1&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;-1&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;0&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;0&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;1&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;1&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;2&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;2&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;3&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;3&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;4&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;4&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;error-message&quot; id=&quot;x-error&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Координата Y - Текстовое поле --&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;y-input&quot; class=&quot;form-label&quot;&gt;&#10;                    Координата Y:&#10;                &lt;/label&gt;&#10;                &lt;div class=&quot;input-group&quot;&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;y-input&quot; name=&quot;y&quot; class=&quot;ios-input&quot; placeholder=&quot;от -3 до 5&quot; required&gt;&#10;                    &lt;span class=&quot;input-hint&quot;&gt;(-3 ... 5)&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;error-message&quot; id=&quot;y-error&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Параметр R - Радио кнопки --&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label class=&quot;form-label&quot;&gt;&#10;                    Параметр R:&#10;                &lt;/label&gt;&#10;                &lt;div class=&quot;r-radios&quot; id=&quot;r-radios&quot;&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; id=&quot;r1&quot; name=&quot;r&quot; value=&quot;1&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;1&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; id=&quot;r1_5&quot; name=&quot;r&quot; value=&quot;1.5&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;1.5&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; id=&quot;r2&quot; name=&quot;r&quot; value=&quot;2&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;2&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; id=&quot;r2_5&quot; name=&quot;r&quot; value=&quot;2.5&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;2.5&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; id=&quot;r3&quot; name=&quot;r&quot; value=&quot;3&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;3&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;error-message&quot; id=&quot;r-error&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;button type=&quot;submit&quot; class=&quot;submit-btn&quot;&gt;&#10;                    &lt;span class=&quot;btn-content&quot;&gt;&#10;                        &lt;span class=&quot;btn-text&quot;&gt;Проверить точку&lt;/span&gt;&#10;                    &lt;/span&gt;&#10;            &lt;/button&gt;&#10;        &lt;/form&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;!-- Координатная плоскость --&gt;&#10;    &lt;section class=&quot;canvas-section ios-card&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;&#10;            Координатная плоскость&#10;        &lt;/h2&gt;&#10;        &lt;div class=&quot;canvas-container&quot;&gt;&#10;            &lt;div class=&quot;canvas-wrapper&quot;&gt;&#10;                &lt;canvas id=&quot;coordinatePlane&quot; width=&quot;600&quot; height=&quot;600&quot;&gt;&lt;/canvas&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;canvas-info&quot;&gt;&#10;                &lt;p class=&quot;canvas-hint&quot;&gt;&#10;                    Кликните на область для добавления точки&#10;                &lt;/p&gt;&#10;                &lt;p class=&quot;current-r-display&quot;&gt;&#10;                    Текущий R: &lt;span id=&quot;current-r&quot; class=&quot;r-value&quot;&gt;-&lt;/span&gt;&#10;                &lt;/p&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;!-- Таблица результатов --&gt;&#10;    &lt;section class=&quot;results-section ios-card&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;&#10;            Результаты проверки&#10;        &lt;/h2&gt;&#10;        &lt;div class=&quot;table-container&quot;&gt;&#10;            &lt;table id=&quot;resultsTable&quot; class=&quot;results-table&quot;&gt;&#10;                &lt;thead&gt;&#10;                &lt;tr&gt;&#10;                    &lt;th&gt;X&lt;/th&gt;&#10;                    &lt;th&gt;Y&lt;/th&gt;&#10;                    &lt;th&gt;R&lt;/th&gt;&#10;                    &lt;th&gt;Результат&lt;/th&gt;&#10;                    &lt;th&gt;Время сервера&lt;/th&gt;&#10;                    &lt;th&gt;Время выполнения&lt;/th&gt;&#10;                &lt;/tr&gt;&#10;                &lt;/thead&gt;&#10;                &lt;tbody id=&quot;results-body&quot;&gt;&#10;                &lt;!-- Результаты будут добавляться здесь --&gt;&#10;                &lt;/tbody&gt;&#10;            &lt;/table&gt;&#10;            &lt;div id=&quot;empty-state&quot; class=&quot;empty-state&quot;&gt;&#10;                &lt;p&gt;Пока нет результатов&lt;/p&gt;&#10;                &lt;small&gt;Добавьте точку для начала работы&lt;/small&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;button id=&quot;clear-results&quot; class=&quot;clear-btn&quot;&gt;&#10;                &lt;span class=&quot;btn-content&quot;&gt;&#10;                    &lt;span class=&quot;btn-text&quot;&gt;Очистить результаты&lt;/span&gt;&#10;                &lt;/span&gt;&#10;        &lt;/button&gt;&#10;    &lt;/section&gt;&#10;&lt;/main&gt;&#10;&#10;&lt;!-- Модальное окно для ошибок --&gt;&#10;&lt;div id=&quot;error-modal&quot; class=&quot;modal&quot;&gt;&#10;    &lt;div class=&quot;modal-backdrop&quot;&gt;&lt;/div&gt;&#10;    &lt;div class=&quot;modal-content&quot;&gt;&#10;        &lt;div class=&quot;modal-header&quot;&gt;&#10;            &lt;h3 class=&quot;modal-title&quot;&gt;Ошибка&lt;/h3&gt;&#10;            &lt;button class=&quot;close-btn&quot; type=&quot;button&quot;&gt;×&lt;/button&gt;&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;modal-body&quot;&gt;&#10;            &lt;p id=&quot;error-text&quot;&gt;&lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Загрузочный индикатор --&gt;&#10;&lt;div id=&quot;loading&quot; class=&quot;loading&quot;&gt;&#10;    &lt;div class=&quot;loading-content&quot;&gt;&#10;        &lt;div class=&quot;loading-spinner&quot;&gt;&lt;/div&gt;&#10;        &lt;p class=&quot;loading-text&quot;&gt;Отправка запроса...&lt;/p&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;&#10;&lt;script src=&quot;canvas.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;ru&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Лабораторная работа №1 - Проверка попадания точки в область&lt;/title&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;!-- Шапка с информацией о студенте --&gt;&#10;&lt;header class=&quot;header&quot;&gt;&#10;    &lt;div class=&quot;header-content&quot;&gt;&#10;        &lt;div class=&quot;header-left&quot;&gt;&#10;            &lt;h1 class=&quot;main-title&quot;&gt;Лабораторная работа №1&lt;/h1&gt;&#10;            &lt;p class=&quot;subtitle&quot;&gt;Проверка попадания точки в область&lt;/p&gt;&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;student-info&quot;&gt;&#10;            &lt;div class=&quot;info-card&quot;&gt;&#10;                &lt;p&gt;&lt;span class=&quot;info-label&quot;&gt;ФИО:&lt;/span&gt; Мантуш Даниил Валерьевич&lt;/p&gt;&#10;                &lt;p&gt;&lt;span class=&quot;info-label&quot;&gt;Группа:&lt;/span&gt; P3219&lt;/p&gt;&#10;                &lt;p&gt;&lt;span class=&quot;info-label&quot;&gt;Вариант:&lt;/span&gt; 434931&lt;/p&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/header&gt;&#10;&#10;&lt;main class=&quot;main-container&quot;&gt;&#10;    &lt;!-- Форма ввода данных --&gt;&#10;    &lt;section class=&quot;input-section ios-card&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;&#10;            Введите координаты точки&#10;        &lt;/h2&gt;&#10;        &lt;form id=&quot;coordinateForm&quot; class=&quot;coordinate-form&quot;&gt;&#10;            &lt;!-- Координата X - Radio кнопки --&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label class=&quot;form-label&quot;&gt;&#10;                    Координата X:&#10;                &lt;/label&gt;&#10;                &lt;div class=&quot;x-radios&quot; id=&quot;x-radios&quot;&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;-4&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;-4&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;-3&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;-3&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;-2&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;-2&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;-1&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;-1&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;0&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;0&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;1&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;1&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;2&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;2&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;3&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;3&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; name=&quot;x&quot; value=&quot;4&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;4&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;error-message&quot; id=&quot;x-error&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Координата Y - Текстовое поле --&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;y-input&quot; class=&quot;form-label&quot;&gt;&#10;                    Координата Y:&#10;                &lt;/label&gt;&#10;                &lt;div class=&quot;input-group&quot;&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;y-input&quot; name=&quot;y&quot; class=&quot;ios-input&quot; placeholder=&quot;от -3 до 5&quot; required&gt;&#10;                    &lt;span class=&quot;input-hint&quot;&gt;(-3 ... 5)&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;error-message&quot; id=&quot;y-error&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Параметр R - Радио кнопки --&gt;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label class=&quot;form-label&quot;&gt;&#10;                    Параметр R:&#10;                &lt;/label&gt;&#10;                &lt;div class=&quot;r-radios&quot; id=&quot;r-radios&quot;&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; id=&quot;r1&quot; name=&quot;r&quot; value=&quot;1&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;1&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; id=&quot;r1_5&quot; name=&quot;r&quot; value=&quot;1.5&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;1.5&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; id=&quot;r2&quot; name=&quot;r&quot; value=&quot;2&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;2&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; id=&quot;r2_5&quot; name=&quot;r&quot; value=&quot;2.5&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;2.5&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;label class=&quot;radio-card&quot;&gt;&#10;                        &lt;input type=&quot;radio&quot; id=&quot;r3&quot; name=&quot;r&quot; value=&quot;3&quot;&gt;&#10;                        &lt;div class=&quot;radio-content&quot;&gt;&#10;                            &lt;span class=&quot;radio-value&quot;&gt;3&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/label&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;error-message&quot; id=&quot;r-error&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;button type=&quot;submit&quot; class=&quot;submit-btn&quot;&gt;&#10;                    &lt;span class=&quot;btn-content&quot;&gt;&#10;                        &lt;span class=&quot;btn-text&quot;&gt;Проверить точку&lt;/span&gt;&#10;                    &lt;/span&gt;&#10;            &lt;/button&gt;&#10;        &lt;/form&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;!-- Координатная плоскость --&gt;&#10;    &lt;section class=&quot;canvas-section ios-card&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;&#10;            Координатная плоскость&#10;        &lt;/h2&gt;&#10;        &lt;div class=&quot;canvas-container&quot;&gt;&#10;            &lt;div class=&quot;canvas-wrapper&quot;&gt;&#10;                &lt;canvas id=&quot;coordinatePlane&quot; width=&quot;600&quot; height=&quot;600&quot;&gt;&lt;/canvas&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;canvas-info&quot;&gt;&#10;                &lt;p class=&quot;canvas-hint&quot;&gt;&#10;                    Кликните на область для добавления точки&#10;                &lt;/p&gt;&#10;                &lt;p class=&quot;current-r-display&quot;&gt;&#10;                    Текущий R: &lt;span id=&quot;current-r&quot; class=&quot;r-value&quot;&gt;-&lt;/span&gt;&#10;                &lt;/p&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;!-- Таблица результатов --&gt;&#10;    &lt;section class=&quot;results-section ios-card&quot;&gt;&#10;        &lt;h2 class=&quot;section-title&quot;&gt;&#10;            Результаты проверки&#10;        &lt;/h2&gt;&#10;        &lt;div class=&quot;table-container&quot;&gt;&#10;            &lt;table id=&quot;resultsTable&quot; class=&quot;results-table&quot;&gt;&#10;                &lt;thead&gt;&#10;                &lt;tr&gt;&#10;                    &lt;th&gt;X&lt;/th&gt;&#10;                    &lt;th&gt;Y&lt;/th&gt;&#10;                    &lt;th&gt;R&lt;/th&gt;&#10;                    &lt;th&gt;Результат&lt;/th&gt;&#10;                    &lt;th&gt;Время сервера&lt;/th&gt;&#10;                    &lt;th&gt;Время выполнения&lt;/th&gt;&#10;                &lt;/tr&gt;&#10;                &lt;/thead&gt;&#10;                &lt;tbody id=&quot;results-body&quot;&gt;&#10;                &lt;!-- Результаты будут добавляться здесь --&gt;&#10;                &lt;/tbody&gt;&#10;            &lt;/table&gt;&#10;            &lt;div id=&quot;empty-state&quot; class=&quot;empty-state&quot;&gt;&#10;                &lt;p&gt;Пока нет результатов&lt;/p&gt;&#10;                &lt;small&gt;Добавьте точку для начала работы&lt;/small&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;button id=&quot;clear-results&quot; class=&quot;clear-btn&quot;&gt;&#10;                &lt;span class=&quot;btn-content&quot;&gt;&#10;                    &lt;span class=&quot;btn-text&quot;&gt;Очистить результаты&lt;/span&gt;&#10;                &lt;/span&gt;&#10;        &lt;/button&gt;&#10;    &lt;/section&gt;&#10;&lt;/main&gt;&#10;&#10;&lt;!-- Модальное окно для ошибок --&gt;&#10;&lt;div id=&quot;error-modal&quot; class=&quot;modal&quot;&gt;&#10;    &lt;div class=&quot;modal-backdrop&quot;&gt;&lt;/div&gt;&#10;    &lt;div class=&quot;modal-content&quot;&gt;&#10;        &lt;div class=&quot;modal-header&quot;&gt;&#10;            &lt;h3 class=&quot;modal-title&quot;&gt;Ошибка&lt;/h3&gt;&#10;            &lt;button class=&quot;close-btn&quot; type=&quot;button&quot;&gt;×&lt;/button&gt;&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;modal-body&quot;&gt;&#10;            &lt;p id=&quot;error-text&quot;&gt;&lt;/p&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Загрузочный индикатор --&gt;&#10;&lt;div id=&quot;loading&quot; class=&quot;loading&quot;&gt;&#10;    &lt;div class=&quot;loading-content&quot;&gt;&#10;        &lt;div class=&quot;loading-spinner&quot;&gt;&lt;/div&gt;&#10;        &lt;p class=&quot;loading-text&quot;&gt;Отправка запроса...&lt;/p&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;&#10;&lt;script src=&quot;canvas.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/www/script.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/www/script.js" />
              <option name="originalContent" value="let selectedX = null;&#10;let selectedY = null;&#10;let selectedR = null;&#10;&#10;function getCurrentR() {&#10;    return selectedR;&#10;}&#10;&#10;window.currentR = getCurrentR;&#10;window.addPointFromCanvas = addPointFromCanvas;&#10;&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    console.log('DOM загружен, инициализация...');&#10;&#10;    try {&#10;        initializeForm();&#10;        initializeModal();&#10;        initializeTable();&#10;        loadStoredResults();&#10;        initializeConfirmModal();&#10;&#10;        console.log('Инициализация завершена успешно');&#10;    } catch (error) {&#10;        console.error('Ошибка при инициализации:', error);&#10;    }&#10;});&#10;&#10;function initializeForm() {&#10;    console.log('Инициализация формы...');&#10;&#10;    // X - radio кнопки&#10;    const xRadios = document.querySelectorAll('input[name=&quot;x&quot;]');&#10;    console.log('Найдено X радио:', xRadios.length);&#10;&#10;    xRadios.forEach(radio =&gt; {&#10;        radio.addEventListener('change', function() {&#10;            if (this.checked) {&#10;                selectedX = parseInt(this.value, 10);&#10;                console.log('Выбран X:', selectedX);&#10;                validateX();&#10;            }&#10;        });&#10;    });&#10;&#10;    const yInput = document.getElementById('y-input');&#10;    if (yInput) {&#10;        yInput.addEventListener('keypress', function(e) {&#10;            const char = String.fromCharCode(e.which);&#10;            const value = this.value;&#10;&#10;            if (!/[\d.,\-]/.test(char)) {&#10;                e.preventDefault();&#10;                return;&#10;            }&#10;&#10;            if (char === '-' &amp;&amp; value.length &gt; 0) {&#10;                e.preventDefault();&#10;                return;&#10;            }&#10;&#10;            if ((char === '.' || char === ',') &amp;&amp; (value.includes('.') || value.includes(','))) {&#10;                e.preventDefault();&#10;                return;&#10;            }&#10;        });&#10;&#10;        yInput.addEventListener('input', function() {&#10;            let value = this.value.trim().replace(',', '.');&#10;            if (value.length &gt; 100) {&#10;                value = value.substring(0, 100);&#10;                this.value = value;&#10;            }&#10;            selectedY = value ? value : null;&#10;            console.log('Введен Y (строка):', selectedY);&#10;            validateY();&#10;        });&#10;&#10;        yInput.addEventListener('paste', function(e) {&#10;            e.preventDefault();&#10;            const pastedText = (e.clipboardData || window.clipboardData).getData('text');&#10;            const cleanedText = pastedText.replace(',', '.').trim();&#10;&#10;            if (/^-?\d*\.?\d*$/.test(cleanedText)) {&#10;                this.value = cleanedText;&#10;                selectedY = cleanedText;&#10;                validateY();&#10;            }&#10;        });&#10;    }&#10;&#10;    const rRadios = document.querySelectorAll('input[name=&quot;r&quot;]');&#10;    console.log('Найдено R радио:', rRadios.length);&#10;&#10;    rRadios.forEach(radio =&gt; {&#10;        radio.addEventListener('change', function() {&#10;            if (this.checked) {&#10;                selectedR = parseFloat(this.value);&#10;                console.log('Выбран R:', selectedR);&#10;&#10;                updateCurrentRDisplay();&#10;                validateR();&#10;&#10;                setTimeout(() =&gt; {&#10;                    if (window.drawCoordinatePlane) {&#10;                        window.drawCoordinatePlane();&#10;                    }&#10;                }, 50);&#10;            }&#10;        });&#10;    });&#10;&#10;    const form = document.getElementById('coordinateForm');&#10;    if (form) {&#10;        form.addEventListener('submit', function(e) {&#10;            e.preventDefault();&#10;            handleFormSubmit();&#10;        });&#10;    }&#10;&#10;    const clearButton = document.getElementById('clear-results');&#10;    if (clearButton) {&#10;        clearButton.addEventListener('click', function() {&#10;            showConfirmModal('Очистить все результаты?', 'Это действие нельзя отменить', function() {&#10;                clearResults();&#10;            });&#10;        });&#10;    }&#10;}&#10;&#10;function updateCurrentRDisplay() {&#10;    const currentRSpan = document.getElementById('current-r');&#10;    if (currentRSpan) {&#10;        currentRSpan.textContent = selectedR || '-';&#10;    }&#10;}&#10;&#10;function validateX() {&#10;    const errorElement = document.getElementById('x-error');&#10;    if (!errorElement) return true;&#10;&#10;    if (selectedX === null || isNaN(selectedX)) {&#10;        showError(errorElement, 'Выберите значение X');&#10;        return false;&#10;    }&#10;&#10;    const allowedValues = [-4, -3, -2, -1, 0, 1, 2, 3, 4];&#10;    if (!allowedValues.includes(selectedX)) {&#10;        showError(errorElement, 'X должен быть одним из допустимых значений');&#10;        return false;&#10;    }&#10;&#10;    hideError(errorElement);&#10;    return true;&#10;}&#10;&#10;function validateY() {&#10;    const errorElement = document.getElementById('y-error');&#10;    if (!errorElement) return true;&#10;&#10;    if (selectedY === null || selectedY === '') {&#10;        showError(errorElement, 'Введите значение Y');&#10;        return false;&#10;    }&#10;&#10;    if (!/^-?\d+\.?\d*$/.test(selectedY)) {&#10;        showError(errorElement, 'Y должен быть числом');&#10;        return false;&#10;    }&#10;&#10;    console.log('validateY: selectedY =', selectedY);&#10;    hideError(errorElement);&#10;    return true;&#10;}&#10;&#10;function validateR() {&#10;    const errorElement = document.getElementById('r-error');&#10;    if (!errorElement) return true;&#10;&#10;    if (selectedR === null || isNaN(selectedR)) {&#10;        showError(errorElement, 'Выберите значение R');&#10;        return false;&#10;    }&#10;&#10;    const allowedValues = [1, 1.5, 2, 2.5, 3];&#10;    if (!allowedValues.includes(selectedR)) {&#10;        showError(errorElement, 'R должен быть одним из допустимых значений');&#10;        return false;&#10;    }&#10;&#10;    hideError(errorElement);&#10;    return true;&#10;}&#10;&#10;function showError(element, message) {&#10;    if (element) {&#10;        element.textContent = message;&#10;        element.classList.add('show');&#10;        element.closest('.form-group')?.classList.add('error');&#10;    }&#10;}&#10;&#10;function hideError(element) {&#10;    if (element) {&#10;        element.textContent = '';&#10;        element.classList.remove('show');&#10;        element.closest('.form-group')?.classList.remove('error');&#10;    }&#10;}&#10;&#10;function handleFormSubmit() {&#10;    console.log('Отправка формы:', { x: selectedX, y: selectedY, r: selectedR });&#10;&#10;    if (!validateX() || !validateY() || !validateR()) {&#10;        showModal('Пожалуйста, исправьте ошибки в форме');&#10;        return;&#10;    }&#10;&#10;    sendDataToServer(selectedX, selectedY, selectedR);&#10;}&#10;&#10;function sendDataToServer(x, y, r, fromCanvas = false) {&#10;    console.log('Отправка на сервер:', { x, y, r });&#10;&#10;    if (!fromCanvas) {&#10;        showLoading(true);&#10;    }&#10;&#10;    const data = {&#10;        x: x,&#10;        y: String(y),&#10;        r: r&#10;    };&#10;&#10;    console.log('JSON для отправки:', JSON.stringify(data));&#10;&#10;    fetch('/calculate', {&#10;        method: 'POST',&#10;        headers: {&#10;            'Content-Type': 'application/json',&#10;        },&#10;        body: JSON.stringify(data)&#10;    })&#10;        .then(response =&gt; {&#10;            if (!response.ok) {&#10;                throw new Error(`HTTP error! status: ${response.status}`);&#10;            }&#10;            return response.json();&#10;        })&#10;        .then(data =&gt; {&#10;            console.log('Ответ сервера:', data);&#10;            handleServerResponse(data);&#10;        })&#10;        .catch(error =&gt; {&#10;            console.error('Ошибка:', error);&#10;            handleServerError(error);&#10;        })&#10;        .finally(() =&gt; {&#10;            if (!fromCanvas) {&#10;                showLoading(false);&#10;            }&#10;        });&#10;}&#10;&#10;function handleServerResponse(data) {&#10;    if (data.error) {&#10;        showModal('Ошибка сервера: ' + data.error);&#10;        return;&#10;    }&#10;&#10;    console.log('Обработка ответа:', data);&#10;&#10;    addResultToTable(data);&#10;    saveResultToStorage(data);&#10;&#10;    if (window.addPointToCanvas) {&#10;        window.addPointToCanvas(parseFloat(data.x), parseFloat(data.y), data.hit, parseFloat(data.r));&#10;    }&#10;&#10;    hideEmptyState();&#10;    clearForm();&#10;}&#10;&#10;function handleServerError(error) {&#10;    let errorMessage = 'Ошибка при отправке запроса на сервер';&#10;&#10;    if (error.message.includes('Failed to fetch')) {&#10;        errorMessage = 'Не удается подключиться к серверу. Проверьте, что FastCGI сервер запущен';&#10;    } else if (error.message.includes('500')) {&#10;        errorMessage = 'Внутренняя ошибка сервера';&#10;    } else if (error.message.includes('400')) {&#10;        errorMessage = 'Некорректные данные';&#10;    } else if (error.message.includes('404')) {&#10;        errorMessage = 'Endpoint не найден. Проверьте URL запроса';&#10;    } else if (error.message.includes('405')) {&#10;        errorMessage = 'Недопустимый метод запроса';&#10;    }&#10;&#10;    showModal(errorMessage);&#10;}&#10;&#10;function truncateNumber(value, maxLength = 20) {&#10;    const str = String(value);&#10;    if (str.length &lt;= maxLength) {&#10;        return str;&#10;    }&#10;    return str.substring(0, maxLength) + '...';&#10;}&#10;&#10;function createCellWithTooltip(value) {&#10;    const truncated = truncateNumber(value);&#10;    const fullValue = String(value);&#10;&#10;    if (truncated === fullValue) {&#10;        return truncated;&#10;    }&#10;&#10;    return `&lt;span class=&quot;truncated-value&quot; data-full-value=&quot;${fullValue}&quot;&gt;${truncated}&lt;/span&gt;`;&#10;}&#10;&#10;function addResultToTable(data) {&#10;    const tableBody = document.getElementById('results-body');&#10;    if (!tableBody) return;&#10;&#10;    const row = document.createElement('tr');&#10;    row.className = data.hit ? 'hit' : 'miss';&#10;&#10;    const resultText = data.hit ? 'Попадание' : 'Промах';&#10;    const resultClass = data.hit ? 'result-hit' : 'result-miss';&#10;&#10;    row.innerHTML = `&#10;        &lt;td&gt;${createCellWithTooltip(data.x)}&lt;/td&gt;&#10;        &lt;td&gt;${createCellWithTooltip(data.y)}&lt;/td&gt;&#10;        &lt;td&gt;${createCellWithTooltip(data.r)}&lt;/td&gt;&#10;        &lt;td class=&quot;${resultClass}&quot;&gt;${resultText}&lt;/td&gt;&#10;        &lt;td&gt;${formatTime(data.currentTime)}&lt;/td&gt;&#10;        &lt;td&gt;${data.scriptTimeMs} мс&lt;/td&gt;&#10;    `;&#10;&#10;    tableBody.insertBefore(row, tableBody.firstChild);&#10;&#10;    initializeTooltips(row);&#10;&#10;    hideEmptyState();&#10;}&#10;&#10;function initializeTooltips(container = document) {&#10;    const truncatedElements = container.querySelectorAll('.truncated-value');&#10;&#10;    truncatedElements.forEach(element =&gt; {&#10;        element.addEventListener('mouseenter', showTooltip);&#10;        element.addEventListener('mouseleave', hideTooltip);&#10;    });&#10;}&#10;&#10;function showTooltip(event) {&#10;    const element = event.currentTarget;&#10;    const fullValue = element.getAttribute('data-full-value');&#10;&#10;    hideTooltip();&#10;&#10;    const tooltip = document.createElement('div');&#10;    tooltip.className = 'value-tooltip';&#10;    tooltip.id = 'active-tooltip';&#10;&#10;    tooltip.innerHTML = `&#10;        &lt;div class=&quot;tooltip-header&quot;&gt;&#10;            &lt;span class=&quot;tooltip-label&quot;&gt;ПОЛНОЕ ЗНАЧЕНИЕ&lt;/span&gt;&#10;            &lt;button class=&quot;tooltip-close&quot; onclick=&quot;window.hideTooltip()&quot;&gt;×&lt;/button&gt;&#10;        &lt;/div&gt;&#10;        &lt;span class=&quot;tooltip-number&quot;&gt;${fullValue}&lt;/span&gt;&#10;        &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;&#10;    `;&#10;&#10;    document.body.appendChild(tooltip);&#10;&#10;    const closeBtn = tooltip.querySelector('.tooltip-close');&#10;    closeBtn.addEventListener('click', (e) =&gt; {&#10;        e.stopPropagation();&#10;        hideTooltip();&#10;    });&#10;&#10;    const rect = element.getBoundingClientRect();&#10;    const tooltipRect = tooltip.getBoundingClientRect();&#10;&#10;    let left = rect.left + (rect.width / 2) - (tooltipRect.width / 2);&#10;    let top = rect.top - tooltipRect.height - 12;&#10;&#10;    const padding = 10;&#10;    if (left &lt; padding) left = padding;&#10;    if (left + tooltipRect.width &gt; window.innerWidth - padding) {&#10;        left = window.innerWidth - tooltipRect.width - padding;&#10;    }&#10;&#10;    if (top &lt; padding) {&#10;        top = rect.bottom + 12;&#10;        tooltip.classList.add('below');&#10;    }&#10;&#10;    tooltip.style.left = left + 'px';&#10;    tooltip.style.top = top + window.scrollY + 'px';&#10;&#10;    requestAnimationFrame(() =&gt; {&#10;        tooltip.classList.add('visible');&#10;    });&#10;}&#10;&#10;window.hideTooltip = hideTooltip;&#10;&#10;function hideTooltip() {&#10;    const existingTooltip = document.getElementById('active-tooltip');&#10;    if (existingTooltip) {&#10;        existingTooltip.classList.remove('visible');&#10;        setTimeout(() =&gt; existingTooltip.remove(), 200);&#10;    }&#10;}&#10;&#10;function formatTime(timeString) {&#10;    try {&#10;        const date = new Date(timeString);&#10;        return date.toLocaleString('ru-RU');&#10;    } catch (e) {&#10;        return timeString;&#10;    }&#10;}&#10;&#10;function clearForm() {&#10;    selectedX = null;&#10;    selectedY = null;&#10;&#10;    // Снимаем выделение с radio-кнопок X&#10;    document.querySelectorAll('input[name=&quot;x&quot;]').forEach(radio =&gt; radio.checked = false);&#10;&#10;    const yInput = document.getElementById('y-input');&#10;    if (yInput) yInput.value = '';&#10;&#10;    ['x-error', 'y-error'].forEach(id =&gt; {&#10;        const errorElement = document.getElementById(id);&#10;        if (errorElement) {&#10;            hideError(errorElement);&#10;        }&#10;    });&#10;}&#10;&#10;function clearResults() {&#10;    const tableBody = document.getElementById('results-body');&#10;    if (tableBody) {&#10;        tableBody.innerHTML = '';&#10;    }&#10;&#10;    localStorage.removeItem('checkResults');&#10;&#10;    if (window.clearCanvasPoints) {&#10;        window.clearCanvasPoints();&#10;    }&#10;&#10;    showEmptyState();&#10;}&#10;&#10;function hideEmptyState() {&#10;    const emptyState = document.getElementById('empty-state');&#10;    if (emptyState) {&#10;        emptyState.style.display = 'none';&#10;    }&#10;}&#10;&#10;function showEmptyState() {&#10;    const emptyState = document.getElementById('empty-state');&#10;    const tableBody = document.getElementById('results-body');&#10;    if (emptyState &amp;&amp; tableBody &amp;&amp; tableBody.children.length === 0) {&#10;        emptyState.style.display = 'block';&#10;    }&#10;}&#10;&#10;function saveResultToStorage(data) {&#10;    try {&#10;        let results = JSON.parse(localStorage.getItem('checkResults') || '[]');&#10;        results.unshift(data);&#10;        if (results.length &gt; 100) {&#10;            results = results.slice(0, 100);&#10;        }&#10;        localStorage.setItem('checkResults', JSON.stringify(results));&#10;    } catch (e) {&#10;        console.error('Ошибка сохранения в localStorage:', e);&#10;    }&#10;}&#10;&#10;function loadStoredResults() {&#10;    try {&#10;        const results = JSON.parse(localStorage.getItem('checkResults') || '[]');&#10;        if (results.length === 0) {&#10;            showEmptyState();&#10;            return;&#10;        }&#10;&#10;        results.forEach(data =&gt; {&#10;            addResultToTable(data);&#10;            if (window.addPointToCanvas) {&#10;                window.addPointToCanvas(parseFloat(data.x), parseFloat(data.y), data.hit, parseFloat(data.r));&#10;            }&#10;        });&#10;&#10;        hideEmptyState();&#10;    } catch (e) {&#10;        console.error('Ошибка загрузки из localStorage:', e);&#10;        showEmptyState();&#10;    }&#10;}&#10;&#10;function initializeModal() {&#10;    const modal = document.getElementById('error-modal');&#10;    if (!modal) return;&#10;&#10;    const closeBtn = modal.querySelector('.close-btn');&#10;    const backdrop = modal.querySelector('.modal-backdrop');&#10;&#10;    if (closeBtn) {&#10;        closeBtn.addEventListener('click', () =&gt; hideModal());&#10;    }&#10;&#10;    if (backdrop) {&#10;        backdrop.addEventListener('click', () =&gt; hideModal());&#10;    }&#10;&#10;    document.addEventListener('keydown', (e) =&gt; {&#10;        if (e.key === 'Escape' &amp;&amp; modal.style.display === 'flex') {&#10;            hideModal();&#10;        }&#10;    });&#10;}&#10;&#10;function showModal(message) {&#10;    const modal = document.getElementById('error-modal');&#10;    const errorText = document.getElementById('error-text');&#10;&#10;    if (modal &amp;&amp; errorText) {&#10;        errorText.textContent = message;&#10;        modal.style.display = 'flex';&#10;    }&#10;}&#10;&#10;function hideModal() {&#10;    const modal = document.getElementById('error-modal');&#10;    if (modal) {&#10;        modal.style.display = 'none';&#10;    }&#10;}&#10;&#10;function showLoading(show) {&#10;    const loading = document.getElementById('loading');&#10;    if (loading) {&#10;        loading.style.display = show ? 'flex' : 'none';&#10;    }&#10;}&#10;&#10;function initializeTable() {&#10;    initializeTooltips();&#10;}&#10;&#10;let confirmCallback = null;&#10;&#10;function initializeConfirmModal() {&#10;    const confirmModal = document.getElementById('confirm-modal');&#10;    if (!confirmModal) {&#10;        createConfirmModal();&#10;    }&#10;}&#10;&#10;function createConfirmModal() {&#10;    const modalHTML = `&#10;        &lt;div id=&quot;confirm-modal&quot; class=&quot;modal&quot;&gt;&#10;            &lt;div class=&quot;modal-backdrop&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;modal-content&quot;&gt;&#10;                &lt;div class=&quot;modal-header&quot;&gt;&#10;                    &lt;h3 class=&quot;modal-title&quot; id=&quot;confirm-title&quot;&gt;Подтверждение&lt;/h3&gt;&#10;                    &lt;button class=&quot;close-btn&quot; type=&quot;button&quot; onclick=&quot;hideConfirmModal()&quot;&gt;×&lt;/button&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;modal-body&quot;&gt;&#10;                    &lt;p id=&quot;confirm-text&quot;&gt;&lt;/p&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;modal-actions&quot;&gt;&#10;                    &lt;button class=&quot;modal-btn modal-btn-secondary&quot; onclick=&quot;hideConfirmModal()&quot;&gt;Отмена&lt;/button&gt;&#10;                    &lt;button class=&quot;modal-btn modal-btn-primary&quot; onclick=&quot;confirmAction()&quot;&gt;Подтвердить&lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    `;&#10;    document.body.insertAdjacentHTML('beforeend', modalHTML);&#10;}&#10;&#10;function showConfirmModal(title, message, callback) {&#10;    let confirmModal = document.getElementById('confirm-modal');&#10;    if (!confirmModal) {&#10;        createConfirmModal();&#10;        confirmModal = document.getElementById('confirm-modal');&#10;    }&#10;&#10;    const confirmTitle = document.getElementById('confirm-title');&#10;    const confirmText = document.getElementById('confirm-text');&#10;&#10;    if (confirmTitle) confirmTitle.textContent = title;&#10;    if (confirmText) confirmText.textContent = message;&#10;&#10;    confirmCallback = callback;&#10;&#10;    if (confirmModal) {&#10;        confirmModal.style.display = 'flex';&#10;    }&#10;}&#10;&#10;window.hideConfirmModal = function() {&#10;    const confirmModal = document.getElementById('confirm-modal');&#10;    if (confirmModal) {&#10;        confirmModal.style.display = 'none';&#10;    }&#10;    confirmCallback = null;&#10;};&#10;&#10;window.confirmAction = function() {&#10;    if (confirmCallback) {&#10;        confirmCallback();&#10;    }&#10;    window.hideConfirmModal();&#10;};&#10;&#10;function addPointFromCanvas(canvasX, canvasY) {&#10;    const r = getCurrentR();&#10;    &#10;    if (!r || r &lt;= 0) {&#10;        showModal('Выберите значение R перед добавлением точки');&#10;        return;&#10;    }&#10;&#10;    const CONFIG = {&#10;        size: 600,&#10;        center: 300,&#10;        scale: 50&#10;    };&#10;&#10;    const graphX = (canvasX - CONFIG.center) / CONFIG.scale;&#10;    const graphY = -(canvasY - CONFIG.center) / CONFIG.scale;&#10;&#10;    const x = Math.round(graphX);&#10;    const y = graphY;&#10;&#10;    const allowedXValues = [-4, -3, -2, -1, 0, 1, 2, 3, 4];&#10;    if (!allowedXValues.includes(x)) {&#10;        showModal('Координата X должна быть целым числом от -4 до 4');&#10;        return;&#10;    }&#10;&#10;    sendDataToServer(x, y, r, true);&#10;}" />
              <option name="updatedContent" value="let selectedX = null;&#10;let selectedY = null;&#10;let selectedR = null;&#10;&#10;function getCurrentR() {&#10;    return selectedR;&#10;}&#10;&#10;window.currentR = getCurrentR;&#10;window.addPointFromCanvas = addPointFromCanvas;&#10;&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    console.log('DOM загружен, инициализация...');&#10;&#10;    try {&#10;        initializeForm();&#10;        initializeModal();&#10;        initializeTable();&#10;        loadStoredResults();&#10;        initializeConfirmModal();&#10;&#10;        console.log('Инициализация завершена успешно');&#10;    } catch (error) {&#10;        console.error('Ошибка при инициализации:', error);&#10;    }&#10;});&#10;&#10;function initializeForm() {&#10;    console.log('Инициализация формы...');&#10;&#10;    // X - radio кнопки&#10;    const xRadios = document.querySelectorAll('input[name=&quot;x&quot;]');&#10;    console.log('Найдено X радио:', xRadios.length);&#10;&#10;    xRadios.forEach(radio =&gt; {&#10;        radio.addEventListener('change', function() {&#10;            if (this.checked) {&#10;                selectedX = parseInt(this.value, 10);&#10;                console.log('Выбран X:', selectedX);&#10;                validateX();&#10;            }&#10;        });&#10;    });&#10;&#10;    const yInput = document.getElementById('y-input');&#10;    if (yInput) {&#10;        yInput.addEventListener('keypress', function(e) {&#10;            const char = String.fromCharCode(e.which);&#10;            const value = this.value;&#10;&#10;            if (!/[\d.,\-]/.test(char)) {&#10;                e.preventDefault();&#10;                return;&#10;            }&#10;&#10;            if (char === '-' &amp;&amp; value.length &gt; 0) {&#10;                e.preventDefault();&#10;                return;&#10;            }&#10;&#10;            if ((char === '.' || char === ',') &amp;&amp; (value.includes('.') || value.includes(','))) {&#10;                e.preventDefault();&#10;                return;&#10;            }&#10;        });&#10;&#10;        yInput.addEventListener('input', function() {&#10;            let value = this.value.trim().replace(',', '.');&#10;            if (value.length &gt; 100) {&#10;                value = value.substring(0, 100);&#10;                this.value = value;&#10;            }&#10;            selectedY = value ? value : null;&#10;            console.log('Введен Y (строка):', selectedY);&#10;            validateY();&#10;        });&#10;&#10;        yInput.addEventListener('paste', function(e) {&#10;            e.preventDefault();&#10;            const pastedText = (e.clipboardData || window.clipboardData).getData('text');&#10;            const cleanedText = pastedText.replace(',', '.').trim();&#10;&#10;            if (/^-?\d*\.?\d*$/.test(cleanedText)) {&#10;                this.value = cleanedText;&#10;                selectedY = cleanedText;&#10;                validateY();&#10;            }&#10;        });&#10;    }&#10;&#10;    const rRadios = document.querySelectorAll('input[name=&quot;r&quot;]');&#10;    console.log('Найдено R радио:', rRadios.length);&#10;&#10;    rRadios.forEach(radio =&gt; {&#10;        radio.addEventListener('change', function() {&#10;            if (this.checked) {&#10;                selectedR = parseFloat(this.value);&#10;                console.log('Выбран R:', selectedR);&#10;&#10;                updateCurrentRDisplay();&#10;                validateR();&#10;&#10;                setTimeout(() =&gt; {&#10;                    if (window.drawCoordinatePlane) {&#10;                        window.drawCoordinatePlane();&#10;                    }&#10;                }, 50);&#10;            }&#10;        });&#10;    });&#10;&#10;    const form = document.getElementById('coordinateForm');&#10;    if (form) {&#10;        form.addEventListener('submit', function(e) {&#10;            e.preventDefault();&#10;            handleFormSubmit();&#10;        });&#10;    }&#10;&#10;    const clearButton = document.getElementById('clear-results');&#10;    if (clearButton) {&#10;        clearButton.addEventListener('click', function() {&#10;            showConfirmModal('Очистить все результаты?', 'Это действие нельзя отменить', function() {&#10;                clearResults();&#10;            });&#10;        });&#10;    }&#10;}&#10;&#10;function updateCurrentRDisplay() {&#10;    const currentRSpan = document.getElementById('current-r');&#10;    if (currentRSpan) {&#10;        currentRSpan.textContent = selectedR || '-';&#10;    }&#10;}&#10;&#10;function validateX() {&#10;    const errorElement = document.getElementById('x-error');&#10;    if (!errorElement) return true;&#10;&#10;    if (selectedX === null || isNaN(selectedX)) {&#10;        showError(errorElement, 'Выберите значение X');&#10;        return false;&#10;    }&#10;&#10;    const allowedValues = [-4, -3, -2, -1, 0, 1, 2, 3, 4];&#10;    if (!allowedValues.includes(selectedX)) {&#10;        showError(errorElement, 'X должен быть одним из допустимых значений');&#10;        return false;&#10;    }&#10;&#10;    hideError(errorElement);&#10;    return true;&#10;}&#10;&#10;function validateY() {&#10;    const errorElement = document.getElementById('y-error');&#10;    if (!errorElement) return true;&#10;&#10;    if (selectedY === null || selectedY === '') {&#10;        showError(errorElement, 'Введите значение Y');&#10;        return false;&#10;    }&#10;&#10;    if (!/^-?\d+\.?\d*$/.test(selectedY)) {&#10;        showError(errorElement, 'Y должен быть числом');&#10;        return false;&#10;    }&#10;&#10;    console.log('validateY: selectedY =', selectedY);&#10;    hideError(errorElement);&#10;    return true;&#10;}&#10;&#10;function validateR() {&#10;    const errorElement = document.getElementById('r-error');&#10;    if (!errorElement) return true;&#10;&#10;    if (selectedR === null || isNaN(selectedR)) {&#10;        showError(errorElement, 'Выберите значение R');&#10;        return false;&#10;    }&#10;&#10;    const allowedValues = [1, 1.5, 2, 2.5, 3];&#10;    if (!allowedValues.includes(selectedR)) {&#10;        showError(errorElement, 'R должен быть одним из допустимых значений');&#10;        return false;&#10;    }&#10;&#10;    hideError(errorElement);&#10;    return true;&#10;}&#10;&#10;function showError(element, message) {&#10;    if (element) {&#10;        element.textContent = message;&#10;        element.classList.add('show');&#10;        element.closest('.form-group')?.classList.add('error');&#10;    }&#10;}&#10;&#10;function hideError(element) {&#10;    if (element) {&#10;        element.textContent = '';&#10;        element.classList.remove('show');&#10;        element.closest('.form-group')?.classList.remove('error');&#10;    }&#10;}&#10;&#10;function handleFormSubmit() {&#10;    console.log('Отправка формы:', { x: selectedX, y: selectedY, r: selectedR });&#10;&#10;    if (!validateX() || !validateY() || !validateR()) {&#10;        showModal('Пожалуйста, исправьте ошибки в форме');&#10;        return;&#10;    }&#10;&#10;    sendDataToServer(selectedX, selectedY, selectedR);&#10;}&#10;&#10;function sendDataToServer(x, y, r, fromCanvas = false) {&#10;    console.log('Отправка на сервер:', { x, y, r });&#10;&#10;    if (!fromCanvas) {&#10;        showLoading(true);&#10;    }&#10;&#10;    const data = {&#10;        x: x,&#10;        y: String(y),&#10;        r: r&#10;    };&#10;&#10;    console.log('JSON для отправки:', JSON.stringify(data));&#10;&#10;    fetch('/calculate', {&#10;        method: 'POST',&#10;        headers: {&#10;            'Content-Type': 'application/json',&#10;        },&#10;        body: JSON.stringify(data)&#10;    })&#10;        .then(response =&gt; {&#10;            if (!response.ok) {&#10;                throw new Error(`HTTP error! status: ${response.status}`);&#10;            }&#10;            return response.json();&#10;        })&#10;        .then(data =&gt; {&#10;            console.log('Ответ сервера:', data);&#10;            handleServerResponse(data);&#10;        })&#10;        .catch(error =&gt; {&#10;            console.error('Ошибка:', error);&#10;            handleServerError(error);&#10;        })&#10;        .finally(() =&gt; {&#10;            if (!fromCanvas) {&#10;                showLoading(false);&#10;            }&#10;        });&#10;}&#10;&#10;function handleServerResponse(data) {&#10;    if (data.error) {&#10;        showModal('Ошибка сервера: ' + data.error);&#10;        return;&#10;    }&#10;&#10;    console.log('Обработка ответа:', data);&#10;&#10;    addResultToTable(data);&#10;    saveResultToStorage(data);&#10;&#10;    if (window.addPointToCanvas) {&#10;        window.addPointToCanvas(parseFloat(data.x), parseFloat(data.y), data.hit, parseFloat(data.r));&#10;    }&#10;&#10;    hideEmptyState();&#10;    clearForm();&#10;}&#10;&#10;function handleServerError(error) {&#10;    let errorMessage = 'Ошибка при отправке запроса на сервер';&#10;&#10;    if (error.message.includes('Failed to fetch')) {&#10;        errorMessage = 'Не удается подключиться к серверу. Проверьте, что FastCGI сервер запущен';&#10;    } else if (error.message.includes('500')) {&#10;        errorMessage = 'Внутренняя ошибка сервера';&#10;    } else if (error.message.includes('400')) {&#10;        errorMessage = 'Некорректные данные';&#10;    } else if (error.message.includes('404')) {&#10;        errorMessage = 'Endpoint не найден. Проверьте URL запроса';&#10;    } else if (error.message.includes('405')) {&#10;        errorMessage = 'Недопустимый метод запроса';&#10;    }&#10;&#10;    showModal(errorMessage);&#10;}&#10;&#10;function truncateNumber(value, maxLength = 20) {&#10;    const str = String(value);&#10;    if (str.length &lt;= maxLength) {&#10;        return str;&#10;    }&#10;    return str.substring(0, maxLength) + '...';&#10;}&#10;&#10;function createCellWithTooltip(value) {&#10;    const truncated = truncateNumber(value);&#10;    const fullValue = String(value);&#10;&#10;    if (truncated === fullValue) {&#10;        return truncated;&#10;    }&#10;&#10;    return `&lt;span class=&quot;truncated-value&quot; data-full-value=&quot;${fullValue}&quot;&gt;${truncated}&lt;/span&gt;`;&#10;}&#10;&#10;function addResultToTable(data) {&#10;    const tableBody = document.getElementById('results-body');&#10;    if (!tableBody) return;&#10;&#10;    const row = document.createElement('tr');&#10;    row.className = data.hit ? 'hit' : 'miss';&#10;&#10;    const resultText = data.hit ? 'Попадание' : 'Промах';&#10;    const resultClass = data.hit ? 'result-hit' : 'result-miss';&#10;&#10;    row.innerHTML = `&#10;        &lt;td&gt;${createCellWithTooltip(data.x)}&lt;/td&gt;&#10;        &lt;td&gt;${createCellWithTooltip(data.y)}&lt;/td&gt;&#10;        &lt;td&gt;${createCellWithTooltip(data.r)}&lt;/td&gt;&#10;        &lt;td class=&quot;${resultClass}&quot;&gt;${resultText}&lt;/td&gt;&#10;        &lt;td&gt;${formatTime(data.currentTime)}&lt;/td&gt;&#10;        &lt;td&gt;${data.scriptTimeMs} мс&lt;/td&gt;&#10;    `;&#10;&#10;    tableBody.insertBefore(row, tableBody.firstChild);&#10;&#10;    initializeTooltips(row);&#10;&#10;    hideEmptyState();&#10;}&#10;&#10;function initializeTooltips(container = document) {&#10;    const truncatedElements = container.querySelectorAll('.truncated-value');&#10;&#10;    truncatedElements.forEach(element =&gt; {&#10;        element.addEventListener('mouseenter', showTooltip);&#10;        element.addEventListener('mouseleave', hideTooltip);&#10;    });&#10;}&#10;&#10;function showTooltip(event) {&#10;    const element = event.currentTarget;&#10;    const fullValue = element.getAttribute('data-full-value');&#10;&#10;    hideTooltip();&#10;&#10;    const tooltip = document.createElement('div');&#10;    tooltip.className = 'value-tooltip';&#10;    tooltip.id = 'active-tooltip';&#10;&#10;    tooltip.innerHTML = `&#10;        &lt;div class=&quot;tooltip-header&quot;&gt;&#10;            &lt;span class=&quot;tooltip-label&quot;&gt;ПОЛНОЕ ЗНАЧЕНИЕ&lt;/span&gt;&#10;            &lt;button class=&quot;tooltip-close&quot; onclick=&quot;window.hideTooltip()&quot;&gt;×&lt;/button&gt;&#10;        &lt;/div&gt;&#10;        &lt;span class=&quot;tooltip-number&quot;&gt;${fullValue}&lt;/span&gt;&#10;        &lt;div class=&quot;tooltip-arrow&quot;&gt;&lt;/div&gt;&#10;    `;&#10;&#10;    document.body.appendChild(tooltip);&#10;&#10;    const closeBtn = tooltip.querySelector('.tooltip-close');&#10;    closeBtn.addEventListener('click', (e) =&gt; {&#10;        e.stopPropagation();&#10;        hideTooltip();&#10;    });&#10;&#10;    const rect = element.getBoundingClientRect();&#10;    const tooltipRect = tooltip.getBoundingClientRect();&#10;&#10;    let left = rect.left + (rect.width / 2) - (tooltipRect.width / 2);&#10;    let top = rect.top - tooltipRect.height - 12;&#10;&#10;    const padding = 10;&#10;    if (left &lt; padding) left = padding;&#10;    if (left + tooltipRect.width &gt; window.innerWidth - padding) {&#10;        left = window.innerWidth - tooltipRect.width - padding;&#10;    }&#10;&#10;    if (top &lt; padding) {&#10;        top = rect.bottom + 12;&#10;        tooltip.classList.add('below');&#10;    }&#10;&#10;    tooltip.style.left = left + 'px';&#10;    tooltip.style.top = top + window.scrollY + 'px';&#10;&#10;    requestAnimationFrame(() =&gt; {&#10;        tooltip.classList.add('visible');&#10;    });&#10;}&#10;&#10;window.hideTooltip = hideTooltip;&#10;&#10;function hideTooltip() {&#10;    const existingTooltip = document.getElementById('active-tooltip');&#10;    if (existingTooltip) {&#10;        existingTooltip.classList.remove('visible');&#10;        setTimeout(() =&gt; existingTooltip.remove(), 200);&#10;    }&#10;}&#10;&#10;function formatTime(timeString) {&#10;    try {&#10;        const date = new Date(timeString);&#10;        return date.toLocaleString('ru-RU');&#10;    } catch (e) {&#10;        return timeString;&#10;    }&#10;}&#10;&#10;function clearForm() {&#10;    selectedX = null;&#10;    selectedY = null;&#10;&#10;    // Снимаем выделение с radio-кнопок X&#10;    document.querySelectorAll('input[name=&quot;x&quot;]').forEach(radio =&gt; radio.checked = false);&#10;&#10;    const yInput = document.getElementById('y-input');&#10;    if (yInput) yInput.value = '';&#10;&#10;    ['x-error', 'y-error'].forEach(id =&gt; {&#10;        const errorElement = document.getElementById(id);&#10;        if (errorElement) {&#10;            hideError(errorElement);&#10;        }&#10;    });&#10;}&#10;&#10;function clearResults() {&#10;    const tableBody = document.getElementById('results-body');&#10;    if (tableBody) {&#10;        tableBody.innerHTML = '';&#10;    }&#10;&#10;    localStorage.removeItem('checkResults');&#10;&#10;    if (window.clearCanvasPoints) {&#10;        window.clearCanvasPoints();&#10;    }&#10;&#10;    showEmptyState();&#10;}&#10;&#10;function hideEmptyState() {&#10;    const emptyState = document.getElementById('empty-state');&#10;    if (emptyState) {&#10;        emptyState.style.display = 'none';&#10;    }&#10;}&#10;&#10;function showEmptyState() {&#10;    const emptyState = document.getElementById('empty-state');&#10;    const tableBody = document.getElementById('results-body');&#10;    if (emptyState &amp;&amp; tableBody &amp;&amp; tableBody.children.length === 0) {&#10;        emptyState.style.display = 'block';&#10;    }&#10;}&#10;&#10;function saveResultToStorage(data) {&#10;    try {&#10;        let results = JSON.parse(localStorage.getItem('checkResults') || '[]');&#10;        results.unshift(data);&#10;        if (results.length &gt; 100) {&#10;            results = results.slice(0, 100);&#10;        }&#10;        localStorage.setItem('checkResults', JSON.stringify(results));&#10;    } catch (e) {&#10;        console.error('Ошибка сохранения в localStorage:', e);&#10;    }&#10;}&#10;&#10;function loadStoredResults() {&#10;    try {&#10;        const results = JSON.parse(localStorage.getItem('checkResults') || '[]');&#10;        if (results.length === 0) {&#10;            showEmptyState();&#10;            return;&#10;        }&#10;&#10;        results.forEach(data =&gt; {&#10;            addResultToTable(data);&#10;            if (window.addPointToCanvas) {&#10;                window.addPointToCanvas(parseFloat(data.x), parseFloat(data.y), data.hit, parseFloat(data.r));&#10;            }&#10;        });&#10;&#10;        hideEmptyState();&#10;    } catch (e) {&#10;        console.error('Ошибка загрузки из localStorage:', e);&#10;        showEmptyState();&#10;    }&#10;}&#10;&#10;function initializeModal() {&#10;    const modal = document.getElementById('error-modal');&#10;    if (!modal) return;&#10;&#10;    const closeBtn = modal.querySelector('.close-btn');&#10;    const backdrop = modal.querySelector('.modal-backdrop');&#10;&#10;    if (closeBtn) {&#10;        closeBtn.addEventListener('click', () =&gt; hideModal());&#10;    }&#10;&#10;    if (backdrop) {&#10;        backdrop.addEventListener('click', () =&gt; hideModal());&#10;    }&#10;&#10;    document.addEventListener('keydown', (e) =&gt; {&#10;        if (e.key === 'Escape' &amp;&amp; modal.style.display === 'flex') {&#10;            hideModal();&#10;        }&#10;    });&#10;}&#10;&#10;function showModal(message) {&#10;    const modal = document.getElementById('error-modal');&#10;    const errorText = document.getElementById('error-text');&#10;&#10;    if (modal &amp;&amp; errorText) {&#10;        errorText.textContent = message;&#10;        modal.style.display = 'flex';&#10;    }&#10;}&#10;&#10;function hideModal() {&#10;    const modal = document.getElementById('error-modal');&#10;    if (modal) {&#10;        modal.style.display = 'none';&#10;    }&#10;}&#10;&#10;function showLoading(show) {&#10;    const loading = document.getElementById('loading');&#10;    if (loading) {&#10;        loading.style.display = show ? 'flex' : 'none';&#10;    }&#10;}&#10;&#10;function initializeTable() {&#10;    initializeTooltips();&#10;}&#10;&#10;let confirmCallback = null;&#10;&#10;function initializeConfirmModal() {&#10;    const confirmModal = document.getElementById('confirm-modal');&#10;    if (!confirmModal) {&#10;        createConfirmModal();&#10;    }&#10;}&#10;&#10;function createConfirmModal() {&#10;    const modalHTML = `&#10;        &lt;div id=&quot;confirm-modal&quot; class=&quot;modal&quot;&gt;&#10;            &lt;div class=&quot;modal-backdrop&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;modal-content&quot;&gt;&#10;                &lt;div class=&quot;modal-header&quot;&gt;&#10;                    &lt;h3 class=&quot;modal-title&quot; id=&quot;confirm-title&quot;&gt;Подтверждение&lt;/h3&gt;&#10;                    &lt;button class=&quot;close-btn&quot; type=&quot;button&quot; onclick=&quot;hideConfirmModal()&quot;&gt;×&lt;/button&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;modal-body&quot;&gt;&#10;                    &lt;p id=&quot;confirm-text&quot;&gt;&lt;/p&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;modal-actions&quot;&gt;&#10;                    &lt;button class=&quot;modal-btn modal-btn-secondary&quot; onclick=&quot;hideConfirmModal()&quot;&gt;Отмена&lt;/button&gt;&#10;                    &lt;button class=&quot;modal-btn modal-btn-primary&quot; onclick=&quot;confirmAction()&quot;&gt;Подтвердить&lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    `;&#10;    document.body.insertAdjacentHTML('beforeend', modalHTML);&#10;}&#10;&#10;function showConfirmModal(title, message, callback) {&#10;    let confirmModal = document.getElementById('confirm-modal');&#10;    if (!confirmModal) {&#10;        createConfirmModal();&#10;        confirmModal = document.getElementById('confirm-modal');&#10;    }&#10;&#10;    const confirmTitle = document.getElementById('confirm-title');&#10;    const confirmText = document.getElementById('confirm-text');&#10;&#10;    if (confirmTitle) confirmTitle.textContent = title;&#10;    if (confirmText) confirmText.textContent = message;&#10;&#10;    confirmCallback = callback;&#10;&#10;    if (confirmModal) {&#10;        confirmModal.style.display = 'flex';&#10;    }&#10;}&#10;&#10;window.hideConfirmModal = function() {&#10;    const confirmModal = document.getElementById('confirm-modal');&#10;    if (confirmModal) {&#10;        confirmModal.style.display = 'none';&#10;    }&#10;    confirmCallback = null;&#10;};&#10;&#10;window.confirmAction = function() {&#10;    if (confirmCallback) {&#10;        confirmCallback();&#10;    }&#10;    window.hideConfirmModal();&#10;};&#10;&#10;function addPointFromCanvas(canvasX, canvasY) {&#10;    const r = getCurrentR();&#10;    &#10;    if (!r || r &lt;= 0) {&#10;        showModal('Выберите значение R перед добавлением точки');&#10;        return;&#10;    }&#10;&#10;    const CONFIG = {&#10;        size: 600,&#10;        center: 300,&#10;        scale: 50&#10;    };&#10;&#10;    const graphX = (canvasX - CONFIG.center) / CONFIG.scale;&#10;    const graphY = -(canvasY - CONFIG.center) / CONFIG.scale;&#10;&#10;    const x = Math.round(graphX);&#10;    const y = graphY;&#10;&#10;    const allowedXValues = [-4, -3, -2, -1, 0, 1, 2, 3, 4];&#10;    if (!allowedXValues.includes(x)) {&#10;        showModal('Координата X должна быть целым числом от -4 до 4');&#10;        return;&#10;    }&#10;&#10;    sendDataToServer(x, y, r, true);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/www/styles.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/www/styles.css" />
              <option name="originalContent" value="@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&amp;display=swap');&#10;&#10;:root {&#10;    --ios-blue: rgba(115, 37, 252, 0.47);&#10;    --ios-blue-light: #5AC8FA;&#10;    --ios-purple: #AF52DE;&#10;    --ios-pink: #FF2D92;&#10;    --ios-red: #FF3B30;&#10;    --ios-orange: #FF9500;&#10;    --ios-yellow: #FFCC00;&#10;    --ios-green: #34C759;&#10;    --ios-teal: #5AC8FA;&#10;    --ios-indigo: #5856D6;&#10;&#10;    --ios-bg-primary: rgba(255, 255, 255, 0.8);&#10;    --ios-bg-secondary: rgba(255, 255, 255, 0.6);&#10;    --ios-bg-tertiary: rgba(255, 255, 255, 0.4);&#10;    --ios-glass: rgba(255, 255, 255, 0.25);&#10;    --ios-glass-border: rgba(255, 255, 255, 0.3);&#10;&#10;    --ios-shadow-small: 0 1px 3px rgba(0, 0, 0, 0.12);&#10;    --ios-shadow-medium: 0 4px 16px rgba(0, 0, 0, 0.12);&#10;    --ios-shadow-large: 0 8px 32px rgba(0, 0, 0, 0.16);&#10;&#10;    --ios-radius-small: 12px;&#10;    --ios-radius-medium: 16px;&#10;    --ios-radius-large: 24px;&#10;    --ios-radius-xl: 32px;&#10;&#10;    --ios-ease: cubic-bezier(0.2, 0.8, 0.4, 1);&#10;    --ios-duration: 0.35s;&#10;&#10;    --text-primary: #1D1D1F;&#10;    --text-secondary: rgb(0, 0, 0);&#10;    --text-tertiary: #C7C7CC;&#10;}&#10;&#10;* {&#10;    margin: 0;&#10;    padding: 0;&#10;    box-sizing: border-box;&#10;}&#10;&#10;body {&#10;    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'Inter', sans-serif;&#10;    font-size: 17px;&#10;    line-height: 1.47;&#10;    color: var(--text-primary);&#10;    background: linear-gradient(135deg, #667eea 0%, #764ba2 35%, #667eea 70%, #764ba2 100%);&#10;    background-attachment: fixed;&#10;    min-height: 100vh;&#10;    -webkit-font-smoothing: antialiased;&#10;    -moz-osx-font-smoothing: grayscale;&#10;}&#10;&#10;.ios-card {&#10;    background: var(--ios-glass);&#10;    backdrop-filter: blur(20px) saturate(180%);&#10;    -webkit-backdrop-filter: blur(20px) saturate(180%);&#10;    border: 1px solid var(--ios-glass-border);&#10;    border-radius: var(--ios-radius-large);&#10;    box-shadow: var(--ios-shadow-medium);&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    position: relative;&#10;    overflow: hidden;&#10;}&#10;&#10;.ios-card::before {&#10;    content: '';&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    right: 0;&#10;    height: 1px;&#10;    background: linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.6) 50%, transparent 100%);&#10;    z-index: 1;&#10;}&#10;&#10;.ios-card:hover {&#10;    transform: translateY(-2px) scale(1.01);&#10;    box-shadow: var(--ios-shadow-large);&#10;    border-color: rgba(255, 255, 255, 0.4);&#10;}&#10;&#10;.header {&#10;    background: var(--ios-glass);&#10;    backdrop-filter: blur(30px) saturate(180%);&#10;    -webkit-backdrop-filter: blur(30px) saturate(180%);&#10;    border-bottom: 0.5px solid rgba(255, 255, 255, 0.2);&#10;    padding: 20px 5% 24px;&#10;    box-shadow: var(--ios-shadow-small);&#10;    position: sticky;&#10;    top: 0;&#10;    z-index: 100;&#10;}&#10;&#10;.header-content {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;}&#10;&#10;.header-left {&#10;    flex: 1;&#10;}&#10;&#10;.main-title {&#10;    font-size: 32px;&#10;    font-weight: 700;&#10;    background: linear-gradient(135deg, var(--ios-blue), var(--ios-purple));&#10;    background-clip: text;&#10;    -webkit-background-clip: text;&#10;    -webkit-text-fill-color: transparent;&#10;    margin-bottom: 4px;&#10;    letter-spacing: -0.5px;&#10;}&#10;&#10;.subtitle {&#10;    color: var(--text-secondary);&#10;    font-size: 17px;&#10;    font-weight: 400;&#10;}&#10;&#10;.info-card {&#10;    background: rgba(255, 255, 255, 0);&#10;    padding: 16px 20px;&#10;    border-radius: var(--ios-radius-medium);&#10;    border: 1px solid rgba(255, 255, 255, 0);&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;.info-label {&#10;    font-weight: 600;&#10;    color: var(--ios-blue);&#10;}&#10;&#10;.main-container {&#10;    max-width: 1200px;&#10;    margin: 32px auto;&#10;    padding: 0 20px;&#10;    display: grid;&#10;    grid-template-columns: 1fr 1fr;&#10;    grid-template-rows: auto auto;&#10;    gap: 24px;&#10;}&#10;&#10;.input-section {&#10;    grid-column: 1;&#10;    grid-row: 1;&#10;}&#10;&#10;.canvas-section {&#10;    grid-column: 2;&#10;    grid-row: 1;&#10;}&#10;&#10;.results-section {&#10;    grid-column: 1 / -1;&#10;    grid-row: 2;&#10;}&#10;&#10;section {&#10;    padding: 32px;&#10;    animation: slideUp 0.6s var(--ios-ease);&#10;}&#10;&#10;@keyframes slideUp {&#10;    from {&#10;        opacity: 0;&#10;        transform: translateY(20px);&#10;    }&#10;    to {&#10;        opacity: 1;&#10;        transform: translateY(0);&#10;    }&#10;}&#10;&#10;.section-title {&#10;    color: var(--text-primary);&#10;    margin-bottom: 32px;&#10;    font-size: 28px;&#10;    font-weight: 700;&#10;    text-align: left;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 12px;&#10;    letter-spacing: -0.3px;&#10;}&#10;&#10;.coordinate-form {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 32px;&#10;}&#10;&#10;.form-group {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 12px;&#10;}&#10;&#10;.form-label {&#10;    font-weight: 600;&#10;    color: var(--text-primary);&#10;    font-size: 17px;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 8px;&#10;}&#10;&#10;.ios-button {&#10;    padding: 16px 24px;&#10;    border: 1px solid rgba(255, 255, 255, 0.3);&#10;    border-radius: var(--ios-radius-medium);&#10;    font-size: 17px;&#10;    font-weight: 600;&#10;    cursor: pointer;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    font-family: inherit;&#10;    -webkit-tap-highlight-color: transparent;&#10;    background: rgba(255, 255, 255, 0.2);&#10;    color: var(--text-primary);&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;.ios-button:hover {&#10;    background: rgba(255, 255, 255, 0.3);&#10;    transform: translateY(-1px);&#10;    box-shadow: var(--ios-shadow-medium);&#10;}&#10;&#10;.ios-button:active {&#10;    transform: translateY(0) scale(0.98);&#10;    transition-duration: 0.1s;&#10;}&#10;&#10;.ios-button.active {&#10;    background: var(--ios-blue);&#10;    color: white;&#10;    transform: translateY(-1px);&#10;    box-shadow: 0 4px 16px rgba(0, 122, 255, 0.3);&#10;}&#10;&#10;.x-buttons {&#10;    display: grid;&#10;    grid-template-columns: repeat(5, 1fr);&#10;    gap: 12px;&#10;}&#10;&#10;.x-btn {&#10;    min-height: 56px;&#10;    font-size: 17px;&#10;}&#10;&#10;.input-group {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 16px;&#10;}&#10;&#10;.ios-input {&#10;    flex: 1;&#10;    padding: 16px 20px;&#10;    border: 1px solid rgba(255, 255, 255, 0.3);&#10;    border-radius: var(--ios-radius-medium);&#10;    font-size: 17px;&#10;    background: rgba(255, 255, 255, 0.2);&#10;    backdrop-filter: blur(10px);&#10;    color: var(--text-primary);&#10;    font-weight: 400;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    font-family: inherit;&#10;}&#10;&#10;.ios-input::placeholder {&#10;    color: var(--text-secondary);&#10;    font-weight: 400;&#10;}&#10;&#10;.ios-input:focus {&#10;    outline: none;&#10;    border-color: var(--ios-blue);&#10;    background: rgba(255, 255, 255, 0.3);&#10;    box-shadow: 0 0 0 4px rgba(0, 122, 255, 0.15);&#10;    transform: translateY(-1px);&#10;}&#10;&#10;.input-hint {&#10;    color: var(--text-secondary);&#10;    font-size: 15px;&#10;    font-weight: 500;&#10;    min-width: 100px;&#10;    padding: 16px 20px;&#10;    background: rgba(255, 255, 255, 0.15);&#10;    border-radius: var(--ios-radius-medium);&#10;    text-align: center;&#10;    border: 1px solid rgba(255, 255, 255, 0.2);&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;.r-radios {&#10;    display: flex;&#10;    gap: 12px;&#10;    flex-wrap: wrap;&#10;}&#10;&#10;.x-radios {&#10;    display: flex;&#10;    gap: 10px;&#10;    flex-wrap: wrap;&#10;}&#10;&#10;.x-radios .radio-card {&#10;    flex: 0 0 calc(11.11% - 9px);&#10;    min-width: 60px;&#10;}&#10;&#10;.radio-card {&#10;    flex: 1;&#10;    min-width: 70px;&#10;    border-radius: var(--ios-radius-medium);&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    position: relative;&#10;}&#10;&#10;.radio-card input[type=&quot;radio&quot;] {&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    opacity: 0;&#10;    margin: 0;&#10;    cursor: pointer;&#10;    z-index: 2;&#10;}&#10;&#10;.radio-content {&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    padding: 16px 20px;&#10;    background: rgba(255, 255, 255, 0.2);&#10;    border: 1px solid rgba(255, 255, 255, 0.3);&#10;    border-radius: var(--ios-radius-medium);&#10;    backdrop-filter: blur(10px);&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    cursor: pointer;&#10;}&#10;&#10;.radio-value {&#10;    font-size: 17px;&#10;    font-weight: 600;&#10;    color: var(--text-primary);&#10;}&#10;&#10;.radio-card:hover .radio-content {&#10;    background: rgba(255, 255, 255, 0.3);&#10;    transform: translateY(-1px);&#10;    box-shadow: var(--ios-shadow-medium);&#10;}&#10;&#10;.radio-card input[type=&quot;radio&quot;]:checked + .radio-content {&#10;    background: var(--ios-blue);&#10;    border-color: var(--ios-blue);&#10;    transform: translateY(-1px);&#10;    box-shadow: 0 4px 16px rgba(0, 122, 255, 0.3);&#10;}&#10;&#10;.radio-card input[type=&quot;radio&quot;]:checked + .radio-content .radio-value {&#10;    color: white;&#10;}&#10;&#10;.submit-btn {&#10;    padding: 18px 32px;&#10;    background: var(--ios-blue);&#10;    color: white;&#10;    border: none;&#10;    border-radius: var(--ios-radius-large);&#10;    font-size: 17px;&#10;    font-weight: 600;&#10;    cursor: pointer;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    margin-top: 16px;&#10;    font-family: inherit;&#10;    min-height: 56px;&#10;}&#10;&#10;.btn-content {&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    gap: 12px;&#10;    position: relative;&#10;    z-index: 1;&#10;}&#10;&#10;.submit-btn:hover {&#10;    background: rgba(170, 0, 255, 0.71);&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 8px 24px rgba(191, 0, 255, 0.4);&#10;}&#10;&#10;.submit-btn:active {&#10;    transform: translateY(-1px) scale(0.98);&#10;    transition-duration: 0.1s;&#10;}&#10;&#10;.canvas-container {&#10;    display: flex;&#10;    flex-direction: column;&#10;    align-items: center;&#10;    gap: 24px;&#10;}&#10;&#10;.canvas-wrapper {&#10;    border-radius: var(--ios-radius-large);&#10;    overflow: hidden;&#10;    box-shadow: var(--ios-shadow-large);&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    background: transparent;&#10;    display: inline-block;&#10;}&#10;&#10;.canvas-wrapper:hover {&#10;    transform: translateY(-2px) scale(1.01);&#10;    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.2);&#10;}&#10;&#10;#coordinatePlane {&#10;    display: block;&#10;    background: transparent;&#10;    cursor: crosshair;&#10;    width: 600px;&#10;    height: 600px;&#10;}&#10;&#10;.canvas-info {&#10;    text-align: center;&#10;    padding: 20px;&#10;    background: rgba(255, 255, 255, 0.15);&#10;    border-radius: var(--ios-radius-medium);&#10;    backdrop-filter: blur(10px);&#10;    border: 1px solid rgba(255, 255, 255, 0.2);&#10;}&#10;&#10;.canvas-hint {&#10;    color: var(--text-secondary);&#10;    font-size: 15px;&#10;    margin-bottom: 8px;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    gap: 8px;&#10;}&#10;&#10;.current-r-display {&#10;    color: var(--text-primary);&#10;    font-weight: 600;&#10;    font-size: 17px;&#10;}&#10;&#10;.r-value {&#10;    color: var(--ios-blue);&#10;    font-weight: 700;&#10;}&#10;&#10;.table-container {&#10;    border-radius: var(--ios-radius-large);&#10;    overflow: hidden;&#10;    box-shadow: var(--ios-shadow-medium);&#10;    background: white;&#10;}&#10;&#10;.results-table {&#10;    width: 100%;&#10;    table-layout: fixed;&#10;    border-collapse: collapse;&#10;    background: white;&#10;    border-radius: var(--ios-radius-large);&#10;}&#10;&#10;.results-table th,&#10;.results-table td {&#10;    padding: 16px 12px;&#10;    text-align: center;&#10;    font-weight: 500;&#10;    font-size: 15px;&#10;    word-wrap: break-word;&#10;    overflow: hidden;&#10;    text-overflow: ellipsis;&#10;}&#10;&#10;.results-table th {&#10;    background: var(--ios-blue);&#10;    color: white;&#10;    font-weight: 700;&#10;}&#10;&#10;.results-table tbody tr {&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    background: white;&#10;    border-bottom: 0.5px solid rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.results-table tbody tr:last-child {&#10;    border-bottom: none;&#10;}&#10;&#10;.results-table tbody tr:hover {&#10;    background: rgba(0, 122, 255, 0.05);&#10;}&#10;&#10;.results-table tbody tr.hit {&#10;    background: rgba(52, 199, 89, 0.1);&#10;}&#10;&#10;.results-table tbody tr.miss {&#10;    background: rgba(255, 59, 48, 0.1);&#10;}&#10;&#10;.result-hit {&#10;    color: var(--ios-green);&#10;    font-weight: 700;&#10;}&#10;&#10;.result-miss {&#10;    color: var(--ios-red);&#10;    font-weight: 700;&#10;}&#10;&#10;.results-table th:nth-child(1),&#10;.results-table td:nth-child(1) { width: 20%; }&#10;&#10;.results-table th:nth-child(2),&#10;.results-table td:nth-child(2) { width: 20%; }&#10;&#10;.results-table th:nth-child(3),&#10;.results-table td:nth-child(3) { width: 8%; }&#10;&#10;.results-table th:nth-child(4),&#10;.results-table td:nth-child(4) { width: 12%; }&#10;&#10;.results-table th:nth-child(5),&#10;.results-table td:nth-child(5) { width: 22%; }&#10;&#10;.results-table th:nth-child(6),&#10;.results-table td:nth-child(6) { width: 18%; }&#10;&#10;.empty-state {&#10;    text-align: center;&#10;    padding: 48px 32px;&#10;    color: var(--text-secondary);&#10;    background: rgba(0, 0, 0, 0.02);&#10;    border-radius: var(--ios-radius-medium);&#10;    margin: 16px;&#10;}&#10;&#10;.clear-btn {&#10;    margin-top: 24px;&#10;    padding: 14px 24px;&#10;    background: var(--ios-red);&#10;    color: white;&#10;    border: none;&#10;    border-radius: var(--ios-radius-medium);&#10;    cursor: pointer;&#10;    font-size: 15px;&#10;    font-weight: 600;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    font-family: inherit;&#10;}&#10;&#10;.clear-btn:hover {&#10;    background: #D60A00;&#10;    transform: translateY(-1px);&#10;    box-shadow: 0 4px 16px rgba(255, 59, 48, 0.3);&#10;}&#10;&#10;.modal {&#10;    display: none;&#10;    position: fixed;&#10;    z-index: 2000;&#10;    left: 0;&#10;    top: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    justify-content: center;&#10;    align-items: center;&#10;}&#10;&#10;.modal-backdrop {&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    background: rgba(0, 0, 0, 0.4);&#10;    backdrop-filter: blur(20px);&#10;    -webkit-backdrop-filter: blur(20px);&#10;}&#10;&#10;.modal-content {&#10;    position: relative;&#10;    width: 90%;&#10;    max-width: 400px;&#10;    background: white;&#10;    border-radius: var(--ios-radius-large);&#10;    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);&#10;    animation: modalSlideIn 0.4s var(--ios-ease);&#10;    overflow: hidden;&#10;}&#10;&#10;@keyframes modalSlideIn {&#10;    from {&#10;        opacity: 0;&#10;        transform: scale(0.9) translateY(-20px);&#10;    }&#10;    to {&#10;        opacity: 1;&#10;        transform: scale(1) translateY(0);&#10;    }&#10;}&#10;&#10;.modal-header {&#10;    padding: 24px 24px 12px;&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    border-bottom: 0.5px solid rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.modal-title {&#10;    font-size: 20px;&#10;    font-weight: 700;&#10;    color: var(--text-primary);&#10;}&#10;&#10;.close-btn {&#10;    background: rgba(0, 0, 0, 0.05);&#10;    border: none;&#10;    font-size: 18px;&#10;    color: var(--text-secondary);&#10;    cursor: pointer;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    width: 32px;&#10;    height: 32px;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    border-radius: 50%;&#10;    font-weight: 300;&#10;}&#10;&#10;.close-btn:hover {&#10;    background: rgba(0, 0, 0, 0.1);&#10;    color: var(--text-primary);&#10;}&#10;&#10;.modal-body {&#10;    padding: 12px 24px 24px;&#10;}&#10;&#10;.modal-body p {&#10;    font-size: 17px;&#10;    color: var(--text-primary);&#10;    line-height: 1.5;&#10;    margin: 0;&#10;}&#10;&#10;.modal-actions {&#10;    display: flex;&#10;    gap: 12px;&#10;    margin-top: 24px;&#10;    justify-content: flex-end;&#10;}&#10;&#10;.modal-btn {&#10;    padding: 12px 24px;&#10;    border: none;&#10;    border-radius: var(--ios-radius-medium);&#10;    font-size: 16px;&#10;    font-weight: 600;&#10;    cursor: pointer;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    font-family: inherit;&#10;    min-width: 100px;&#10;}&#10;&#10;.modal-btn-primary {&#10;    background: var(--ios-blue);&#10;    color: white;&#10;}&#10;&#10;.modal-btn-primary:hover {&#10;    background: rgba(0, 102, 204, 1);&#10;    transform: translateY(-1px);&#10;    box-shadow: 0 4px 16px rgba(0, 122, 255, 0.3);&#10;}&#10;&#10;.modal-btn-secondary {&#10;    background: rgba(0, 0, 0, 0.05);&#10;    color: var(--text-primary);&#10;}&#10;&#10;.modal-btn-secondary:hover {&#10;    background: rgba(0, 0, 0, 0.1);&#10;    transform: translateY(-1px);&#10;}&#10;&#10;.error-message {&#10;    color: var(--ios-red);&#10;    font-size: 15px;&#10;    font-weight: 500;&#10;    min-height: 20px;&#10;    opacity: 0;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    padding: 12px 16px;&#10;    border-radius: var(--ios-radius-small);&#10;    background: rgba(255, 59, 48, 0.1);&#10;    border: 1px solid rgba(255, 59, 48, 0.2);&#10;    margin-top: 8px;&#10;}&#10;&#10;.error-message.show {&#10;    opacity: 1;&#10;}&#10;&#10;.form-group.error .ios-input,&#10;.form-group.error .ios-button,&#10;.form-group.error .radio-content {&#10;    border-color: var(--ios-red);&#10;    background: rgba(255, 59, 48, 0.1);&#10;}&#10;&#10;.loading {&#10;    display: none;&#10;    position: fixed;&#10;    z-index: 3000;&#10;    inset: 0;&#10;    background: rgba(255, 255, 255, 0.9);&#10;    backdrop-filter: blur(20px);&#10;    justify-content: center;&#10;    align-items: center;&#10;}&#10;&#10;.loading-content {&#10;    text-align: center;&#10;    background: white;&#10;    padding: 32px;&#10;    border-radius: var(--ios-radius-large);&#10;    box-shadow: var(--ios-shadow-large);&#10;}&#10;&#10;.loading-spinner {&#10;    width: 40px;&#10;    height: 40px;&#10;    border: 3px solid rgba(0, 122, 255, 0.3);&#10;    border-top: 3px solid var(--ios-blue);&#10;    border-radius: 50%;&#10;    animation: spin 1s linear infinite;&#10;    margin: 0 auto 16px;&#10;}&#10;&#10;@keyframes spin {&#10;    0% { transform: rotate(0deg); }&#10;    100% { transform: rotate(360deg); }&#10;}&#10;&#10;.loading-text {&#10;    color: var(--text-primary);&#10;    font-size: 17px;&#10;    font-weight: 600;&#10;    margin: 0;&#10;}&#10;&#10;.truncated-value {&#10;    cursor: help;&#10;    position: relative;&#10;    font-weight: 600;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    padding: 6px 12px;&#10;}&#10;&#10;.value-tooltip {&#10;    position: absolute;&#10;    background: linear-gradient(135deg,&#10;    rgba(255, 255, 255, 0.98) 0%,&#10;    rgba(250, 250, 255, 1) 100%&#10;    );&#10;    backdrop-filter: blur(30px) saturate(180%);&#10;    -webkit-backdrop-filter: blur(30px) saturate(180%);&#10;    border: 1px solid rgba(200, 200, 220, 0.4);&#10;    border-radius: var(--ios-radius-large);&#10;    padding: 24px 28px;&#10;    box-shadow:&#10;            0 16px 48px rgba(0, 0, 0, 0.15),&#10;            0 8px 24px rgba(0, 0, 0, 0.1),&#10;            inset 0 1px 0 rgba(255, 255, 255, 1);&#10;    z-index: 10000;&#10;    pointer-events: auto;&#10;    max-width: 650px;&#10;    min-width: 220px;&#10;    word-wrap: break-word;&#10;    font-family: 'SF Mono', 'Monaco', 'Menlo', 'Courier New', monospace;&#10;    font-size: 15px;&#10;    color: var(--text-primary);&#10;    opacity: 0;&#10;    transform: translateY(-8px) scale(0.92);&#10;    transition: all 0.3s var(--ios-ease);&#10;    letter-spacing: 0.3px;&#10;}&#10;&#10;.value-tooltip.visible {&#10;    opacity: 1;&#10;    transform: translateY(0) scale(1);&#10;}&#10;&#10;.value-tooltip.below {&#10;    transform: translateY(8px) scale(0.92);&#10;}&#10;&#10;.value-tooltip.below.visible {&#10;    transform: translateY(0) scale(1);&#10;}&#10;&#10;.tooltip-header {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    margin-bottom: 12px;&#10;    padding-bottom: 12px;&#10;    border-bottom: 1px solid rgba(115, 37, 252, 0.15);&#10;}&#10;&#10;.tooltip-close {&#10;    background: linear-gradient(135deg, rgba(115, 37, 252, 0.1), rgba(175, 82, 222, 0.1));&#10;    border: 1.5px solid rgba(115, 37, 252, 0.3);&#10;    border-radius: 50%;&#10;    width: 28px;&#10;    height: 28px;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    cursor: pointer;&#10;    transition: all 0.2s var(--ios-ease);&#10;    color: var(--ios-purple);&#10;    font-size: 16px;&#10;    font-weight: 700;&#10;    line-height: 1;&#10;}&#10;&#10;.tooltip-close:hover {&#10;    background: linear-gradient(135deg, rgba(115, 37, 252, 0.2), rgba(175, 82, 222, 0.2));&#10;    border-color: rgba(115, 37, 252, 0.5);&#10;    transform: rotate(90deg) scale(1.1);&#10;}&#10;&#10;.tooltip-arrow {&#10;    position: absolute;&#10;    width: 20px;&#10;    height: 12px;&#10;    bottom: 100%;&#10;    left: 50%;&#10;    transform: translateX(-50%);&#10;    overflow: hidden;&#10;}&#10;&#10;.tooltip-arrow::before {&#10;    content: '';&#10;    position: absolute;&#10;    bottom: 0;&#10;    left: 50%;&#10;    transform: translateX(-50%) rotate(45deg);&#10;    width: 14px;&#10;    height: 14px;&#10;    background: linear-gradient(135deg,&#10;    rgba(255, 255, 255, 0.98),&#10;    rgba(250, 250, 255, 1)&#10;    );&#10;    border: 1px solid rgba(200, 200, 220, 0.4);&#10;    border-bottom: none;&#10;    border-right: none;&#10;    box-shadow: -2px -2px 8px rgba(0, 0, 0, 0.05);&#10;}&#10;&#10;.tooltip-number {&#10;    display: block;&#10;    font-weight: 600;&#10;    font-size: 16px;&#10;    line-height: 1.6;&#10;    background: linear-gradient(135deg, #7325FC, #AF52DE, #5856D6);&#10;    background-clip: text;&#10;    -webkit-background-clip: text;&#10;    -webkit-text-fill-color: transparent;&#10;    word-break: break-all;&#10;    padding-right: 8px;&#10;}&#10;&#10;.tooltip-label {&#10;    display: block;&#10;    font-size: 11px;&#10;    text-transform: uppercase;&#10;    letter-spacing: 1.2px;&#10;    color: rgba(29, 29, 31, 0.5);&#10;    font-weight: 700;&#10;    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', sans-serif;&#10;}&#10;&#10;@media (max-width: 1400px) {&#10;    .main-container {&#10;        grid-template-columns: 1fr;&#10;        grid-template-rows: auto auto auto;&#10;    }&#10;&#10;    .input-section,&#10;    .canvas-section,&#10;    .results-section {&#10;        grid-column: 1;&#10;    }&#10;&#10;    .input-section { grid-row: 1; }&#10;    .canvas-section { grid-row: 2; }&#10;    .results-section { grid-row: 3; }&#10;}&#10;&#10;@media (min-width: 1024px) {&#10;    #coordinatePlane {&#10;        width: 600px;&#10;        height: 600px;&#10;    }&#10;}&#10;&#10;@media (max-width: 1024px) {&#10;    .value-tooltip {&#10;        max-width: 450px;&#10;        font-size: 13px;&#10;        padding: 20px 24px;&#10;    }&#10;&#10;    .tooltip-number {&#10;        font-size: 14px;&#10;    }&#10;&#10;    .x-buttons {&#10;        grid-template-columns: repeat(4, 1fr);&#10;    }&#10;&#10;    .input-group {&#10;        flex-direction: column;&#10;        align-items: stretch;&#10;    }&#10;&#10;    .input-hint {&#10;        min-width: auto;&#10;        width: 100%;&#10;    }&#10;}&#10;&#10;@media (max-width: 1024px) and (min-width: 768px) {&#10;    #coordinatePlane {&#10;        width: 500px;&#10;        height: 500px;&#10;    }&#10;}&#10;&#10;@media (max-width: 768px) {&#10;    #coordinatePlane {&#10;        width: 100%;&#10;        max-width: 500px;&#10;        height: auto;&#10;        aspect-ratio: 1;&#10;    }&#10;&#10;    .canvas-section {&#10;        padding: 24px 16px;&#10;    }&#10;&#10;    .canvas-wrapper {&#10;        width: 100%;&#10;    }&#10;&#10;    .value-tooltip {&#10;        max-width: 350px;&#10;        font-size: 12px;&#10;        padding: 18px 20px;&#10;    }&#10;&#10;    .tooltip-number {&#10;        font-size: 13px;&#10;    }&#10;&#10;    .truncated-value {&#10;        font-size: 14px;&#10;        padding: 4px 10px;&#10;    }&#10;&#10;    .x-buttons {&#10;        grid-template-columns: repeat(3, 1fr);&#10;        gap: 10px;&#10;    }&#10;&#10;    .x-btn {&#10;        min-height: 50px;&#10;        font-size: 15px;&#10;        padding: 12px 16px;&#10;    }&#10;&#10;    .r-radios {&#10;        display: grid;&#10;        grid-template-columns: repeat(3, 1fr);&#10;        gap: 10px;&#10;    }&#10;&#10;    .radio-content {&#10;        padding: 14px 16px;&#10;    }&#10;&#10;    section {&#10;        padding: 24px 16px;&#10;    }&#10;&#10;    .header {&#10;        padding: 16px 5% 20px;&#10;    }&#10;&#10;    .main-title {&#10;        font-size: 24px;&#10;    }&#10;&#10;    .subtitle {&#10;        font-size: 15px;&#10;    }&#10;}&#10;&#10;@media (max-width: 600px) {&#10;    #coordinatePlane {&#10;        width: 100%;&#10;        max-width: 400px;&#10;    }&#10;&#10;    .x-buttons {&#10;        grid-template-columns: repeat(3, 1fr);&#10;        gap: 8px;&#10;    }&#10;&#10;    .x-btn {&#10;        min-height: 48px;&#10;        font-size: 14px;&#10;        padding: 10px 12px;&#10;    }&#10;&#10;    .r-radios {&#10;        grid-template-columns: repeat(2, 1fr);&#10;    }&#10;&#10;    .results-table th,&#10;    .results-table td {&#10;        padding: 12px 8px;&#10;        font-size: 13px;&#10;    }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;    #coordinatePlane {&#10;        width: 100%;&#10;        max-width: 350px;&#10;    }&#10;&#10;    .main-container {&#10;        padding: 0 12px;&#10;    }&#10;&#10;    section {&#10;        padding: 20px 12px;&#10;    }&#10;&#10;    .value-tooltip {&#10;        max-width: 300px;&#10;        padding: 16px 18px;&#10;    }&#10;&#10;    .tooltip-close {&#10;        width: 24px;&#10;        height: 24px;&#10;        font-size: 14px;&#10;    }&#10;&#10;    .x-buttons {&#10;        grid-template-columns: repeat(2, 1fr);&#10;    }&#10;&#10;    .header-content {&#10;        flex-direction: column;&#10;        gap: 16px;&#10;    }&#10;&#10;    .info-card {&#10;        padding: 12px 16px;&#10;    }&#10;&#10;    .main-title {&#10;        font-size: 20px;&#10;    }&#10;&#10;    .results-table {&#10;        font-size: 12px;&#10;    }&#10;&#10;    .results-table th,&#10;    .results-table td {&#10;        padding: 10px 6px;&#10;    }&#10;}&#10;&#10;@media (max-width: 380px) {&#10;    #coordinatePlane {&#10;        width: 100%;&#10;        max-width: 300px;&#10;    }&#10;&#10;    .x-btn {&#10;        min-height: 44px;&#10;        font-size: 13px;&#10;        padding: 8px 10px;&#10;    }&#10;&#10;    .ios-input {&#10;        padding: 14px 16px;&#10;        font-size: 16px;&#10;    }&#10;}" />
              <option name="updatedContent" value="@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&amp;display=swap');&#10;&#10;:root {&#10;    --ios-blue: rgba(115, 37, 252, 0.47);&#10;    --ios-blue-light: #5AC8FA;&#10;    --ios-purple: #AF52DE;&#10;    --ios-pink: #FF2D92;&#10;    --ios-red: #FF3B30;&#10;    --ios-orange: #FF9500;&#10;    --ios-yellow: #FFCC00;&#10;    --ios-green: #34C759;&#10;    --ios-teal: #5AC8FA;&#10;    --ios-indigo: #5856D6;&#10;&#10;    --ios-bg-primary: rgba(255, 255, 255, 0.8);&#10;    --ios-bg-secondary: rgba(255, 255, 255, 0.6);&#10;    --ios-bg-tertiary: rgba(255, 255, 255, 0.4);&#10;    --ios-glass: rgba(255, 255, 255, 0.25);&#10;    --ios-glass-border: rgba(255, 255, 255, 0.3);&#10;&#10;    --ios-shadow-small: 0 1px 3px rgba(0, 0, 0, 0.12);&#10;    --ios-shadow-medium: 0 4px 16px rgba(0, 0, 0, 0.12);&#10;    --ios-shadow-large: 0 8px 32px rgba(0, 0, 0, 0.16);&#10;&#10;    --ios-radius-small: 12px;&#10;    --ios-radius-medium: 16px;&#10;    --ios-radius-large: 24px;&#10;    --ios-radius-xl: 32px;&#10;&#10;    --ios-ease: cubic-bezier(0.2, 0.8, 0.4, 1);&#10;    --ios-duration: 0.35s;&#10;&#10;    --text-primary: #1D1D1F;&#10;    --text-secondary: rgb(0, 0, 0);&#10;    --text-tertiary: #C7C7CC;&#10;}&#10;&#10;* {&#10;    margin: 0;&#10;    padding: 0;&#10;    box-sizing: border-box;&#10;}&#10;&#10;body {&#10;    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'Inter', sans-serif;&#10;    font-size: 17px;&#10;    line-height: 1.47;&#10;    color: var(--text-primary);&#10;    background: linear-gradient(135deg, #667eea 0%, #764ba2 35%, #667eea 70%, #764ba2 100%);&#10;    background-attachment: fixed;&#10;    min-height: 100vh;&#10;    -webkit-font-smoothing: antialiased;&#10;    -moz-osx-font-smoothing: grayscale;&#10;}&#10;&#10;.ios-card {&#10;    background: var(--ios-glass);&#10;    backdrop-filter: blur(20px) saturate(180%);&#10;    -webkit-backdrop-filter: blur(20px) saturate(180%);&#10;    border: 1px solid var(--ios-glass-border);&#10;    border-radius: var(--ios-radius-large);&#10;    box-shadow: var(--ios-shadow-medium);&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    position: relative;&#10;    overflow: hidden;&#10;}&#10;&#10;.ios-card::before {&#10;    content: '';&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    right: 0;&#10;    height: 1px;&#10;    background: linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.6) 50%, transparent 100%);&#10;    z-index: 1;&#10;}&#10;&#10;.ios-card:hover {&#10;    transform: translateY(-2px) scale(1.01);&#10;    box-shadow: var(--ios-shadow-large);&#10;    border-color: rgba(255, 255, 255, 0.4);&#10;}&#10;&#10;.header {&#10;    background: var(--ios-glass);&#10;    backdrop-filter: blur(30px) saturate(180%);&#10;    -webkit-backdrop-filter: blur(30px) saturate(180%);&#10;    border-bottom: 0.5px solid rgba(255, 255, 255, 0.2);&#10;    padding: 20px 5% 24px;&#10;    box-shadow: var(--ios-shadow-small);&#10;    position: sticky;&#10;    top: 0;&#10;    z-index: 100;&#10;}&#10;&#10;.header-content {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;}&#10;&#10;.header-left {&#10;    flex: 1;&#10;}&#10;&#10;.main-title {&#10;    font-size: 32px;&#10;    font-weight: 700;&#10;    background: linear-gradient(135deg, var(--ios-blue), var(--ios-purple));&#10;    background-clip: text;&#10;    -webkit-background-clip: text;&#10;    -webkit-text-fill-color: transparent;&#10;    margin-bottom: 4px;&#10;    letter-spacing: -0.5px;&#10;}&#10;&#10;.subtitle {&#10;    color: var(--text-secondary);&#10;    font-size: 17px;&#10;    font-weight: 400;&#10;}&#10;&#10;.info-card {&#10;    background: rgba(255, 255, 255, 0);&#10;    padding: 16px 20px;&#10;    border-radius: var(--ios-radius-medium);&#10;    border: 1px solid rgba(255, 255, 255, 0);&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;.info-label {&#10;    font-weight: 600;&#10;    color: var(--ios-blue);&#10;}&#10;&#10;.main-container {&#10;    max-width: 1200px;&#10;    margin: 32px auto;&#10;    padding: 0 20px;&#10;    display: grid;&#10;    grid-template-columns: 1fr 1fr;&#10;    grid-template-rows: auto auto;&#10;    gap: 24px;&#10;}&#10;&#10;.input-section {&#10;    grid-column: 1;&#10;    grid-row: 1;&#10;}&#10;&#10;.canvas-section {&#10;    grid-column: 2;&#10;    grid-row: 1;&#10;}&#10;&#10;.results-section {&#10;    grid-column: 1 / -1;&#10;    grid-row: 2;&#10;}&#10;&#10;section {&#10;    padding: 32px;&#10;    animation: slideUp 0.6s var(--ios-ease);&#10;}&#10;&#10;@keyframes slideUp {&#10;    from {&#10;        opacity: 0;&#10;        transform: translateY(20px);&#10;    }&#10;    to {&#10;        opacity: 1;&#10;        transform: translateY(0);&#10;    }&#10;}&#10;&#10;.section-title {&#10;    color: var(--text-primary);&#10;    margin-bottom: 32px;&#10;    font-size: 28px;&#10;    font-weight: 700;&#10;    text-align: left;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 12px;&#10;    letter-spacing: -0.3px;&#10;}&#10;&#10;.coordinate-form {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 32px;&#10;}&#10;&#10;.form-group {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 12px;&#10;}&#10;&#10;.form-label {&#10;    font-weight: 600;&#10;    color: var(--text-primary);&#10;    font-size: 17px;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 8px;&#10;}&#10;&#10;.ios-button {&#10;    padding: 16px 24px;&#10;    border: 1px solid rgba(255, 255, 255, 0.3);&#10;    border-radius: var(--ios-radius-medium);&#10;    font-size: 17px;&#10;    font-weight: 600;&#10;    cursor: pointer;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    font-family: inherit;&#10;    -webkit-tap-highlight-color: transparent;&#10;    background: rgba(255, 255, 255, 0.2);&#10;    color: var(--text-primary);&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;.ios-button:hover {&#10;    background: rgba(255, 255, 255, 0.3);&#10;    transform: translateY(-1px);&#10;    box-shadow: var(--ios-shadow-medium);&#10;}&#10;&#10;.ios-button:active {&#10;    transform: translateY(0) scale(0.98);&#10;    transition-duration: 0.1s;&#10;}&#10;&#10;.ios-button.active {&#10;    background: var(--ios-blue);&#10;    color: white;&#10;    transform: translateY(-1px);&#10;    box-shadow: 0 4px 16px rgba(0, 122, 255, 0.3);&#10;}&#10;&#10;.x-buttons {&#10;    display: grid;&#10;    grid-template-columns: repeat(5, 1fr);&#10;    gap: 12px;&#10;}&#10;&#10;.x-btn {&#10;    min-height: 56px;&#10;    font-size: 17px;&#10;}&#10;&#10;.input-group {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 16px;&#10;}&#10;&#10;.ios-input {&#10;    flex: 1;&#10;    padding: 16px 20px;&#10;    border: 1px solid rgba(255, 255, 255, 0.3);&#10;    border-radius: var(--ios-radius-medium);&#10;    font-size: 17px;&#10;    background: rgba(255, 255, 255, 0.2);&#10;    backdrop-filter: blur(10px);&#10;    color: var(--text-primary);&#10;    font-weight: 400;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    font-family: inherit;&#10;}&#10;&#10;.ios-input::placeholder {&#10;    color: var(--text-secondary);&#10;    font-weight: 400;&#10;}&#10;&#10;.ios-input:focus {&#10;    outline: none;&#10;    border-color: var(--ios-blue);&#10;    background: rgba(255, 255, 255, 0.3);&#10;    box-shadow: 0 0 0 4px rgba(0, 122, 255, 0.15);&#10;    transform: translateY(-1px);&#10;}&#10;&#10;.input-hint {&#10;    color: var(--text-secondary);&#10;    font-size: 15px;&#10;    font-weight: 500;&#10;    min-width: 100px;&#10;    padding: 16px 20px;&#10;    background: rgba(255, 255, 255, 0.15);&#10;    border-radius: var(--ios-radius-medium);&#10;    text-align: center;&#10;    border: 1px solid rgba(255, 255, 255, 0.2);&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;.r-radios {&#10;    display: flex;&#10;    gap: 12px;&#10;    flex-wrap: wrap;&#10;}&#10;&#10;.x-radios {&#10;    display: flex;&#10;    gap: 10px;&#10;    flex-wrap: wrap;&#10;}&#10;&#10;.x-radios .radio-card {&#10;    flex: 0 0 calc(11.11% - 9px);&#10;    min-width: 60px;&#10;}&#10;&#10;.radio-card {&#10;    flex: 1;&#10;    min-width: 70px;&#10;    border-radius: var(--ios-radius-medium);&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    position: relative;&#10;}&#10;&#10;.radio-card input[type=&quot;radio&quot;] {&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    opacity: 0;&#10;    margin: 0;&#10;    cursor: pointer;&#10;    z-index: 2;&#10;}&#10;&#10;.radio-content {&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    padding: 16px 20px;&#10;    background: rgba(255, 255, 255, 0.2);&#10;    border: 1px solid rgba(255, 255, 255, 0.3);&#10;    border-radius: var(--ios-radius-medium);&#10;    backdrop-filter: blur(10px);&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    cursor: pointer;&#10;}&#10;&#10;.radio-value {&#10;    font-size: 17px;&#10;    font-weight: 600;&#10;    color: var(--text-primary);&#10;}&#10;&#10;.radio-card:hover .radio-content {&#10;    background: rgba(255, 255, 255, 0.3);&#10;    transform: translateY(-1px);&#10;    box-shadow: var(--ios-shadow-medium);&#10;}&#10;&#10;.radio-card input[type=&quot;radio&quot;]:checked + .radio-content {&#10;    background: var(--ios-blue);&#10;    border-color: var(--ios-blue);&#10;    transform: translateY(-1px);&#10;    box-shadow: 0 4px 16px rgba(0, 122, 255, 0.3);&#10;}&#10;&#10;.radio-card input[type=&quot;radio&quot;]:checked + .radio-content .radio-value {&#10;    color: white;&#10;}&#10;&#10;.submit-btn {&#10;    padding: 18px 32px;&#10;    background: var(--ios-blue);&#10;    color: white;&#10;    border: none;&#10;    border-radius: var(--ios-radius-large);&#10;    font-size: 17px;&#10;    font-weight: 600;&#10;    cursor: pointer;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    margin-top: 16px;&#10;    font-family: inherit;&#10;    min-height: 56px;&#10;}&#10;&#10;.btn-content {&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    gap: 12px;&#10;    position: relative;&#10;    z-index: 1;&#10;}&#10;&#10;.submit-btn:hover {&#10;    background: rgba(170, 0, 255, 0.71);&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 8px 24px rgba(191, 0, 255, 0.4);&#10;}&#10;&#10;.submit-btn:active {&#10;    transform: translateY(-1px) scale(0.98);&#10;    transition-duration: 0.1s;&#10;}&#10;&#10;.canvas-container {&#10;    display: flex;&#10;    flex-direction: column;&#10;    align-items: center;&#10;    gap: 24px;&#10;}&#10;&#10;.canvas-wrapper {&#10;    border-radius: var(--ios-radius-large);&#10;    overflow: hidden;&#10;    box-shadow: var(--ios-shadow-large);&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    background: transparent;&#10;    display: inline-block;&#10;}&#10;&#10;.canvas-wrapper:hover {&#10;    transform: translateY(-2px) scale(1.01);&#10;    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.2);&#10;}&#10;&#10;#coordinatePlane {&#10;    display: block;&#10;    background: transparent;&#10;    cursor: crosshair;&#10;    width: 600px;&#10;    height: 600px;&#10;}&#10;&#10;.canvas-info {&#10;    text-align: center;&#10;    padding: 20px;&#10;    background: rgba(255, 255, 255, 0.15);&#10;    border-radius: var(--ios-radius-medium);&#10;    backdrop-filter: blur(10px);&#10;    border: 1px solid rgba(255, 255, 255, 0.2);&#10;}&#10;&#10;.canvas-hint {&#10;    color: var(--text-secondary);&#10;    font-size: 15px;&#10;    margin-bottom: 8px;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    gap: 8px;&#10;}&#10;&#10;.current-r-display {&#10;    color: var(--text-primary);&#10;    font-weight: 600;&#10;    font-size: 17px;&#10;}&#10;&#10;.r-value {&#10;    color: var(--ios-blue);&#10;    font-weight: 700;&#10;}&#10;&#10;.table-container {&#10;    border-radius: var(--ios-radius-large);&#10;    overflow: hidden;&#10;    box-shadow: var(--ios-shadow-medium);&#10;    background: white;&#10;}&#10;&#10;.results-table {&#10;    width: 100%;&#10;    table-layout: fixed;&#10;    border-collapse: collapse;&#10;    background: white;&#10;    border-radius: var(--ios-radius-large);&#10;}&#10;&#10;.results-table th,&#10;.results-table td {&#10;    padding: 16px 12px;&#10;    text-align: center;&#10;    font-weight: 500;&#10;    font-size: 15px;&#10;    word-wrap: break-word;&#10;    overflow: hidden;&#10;    text-overflow: ellipsis;&#10;}&#10;&#10;.results-table th {&#10;    background: var(--ios-blue);&#10;    color: white;&#10;    font-weight: 700;&#10;}&#10;&#10;.results-table tbody tr {&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    background: white;&#10;    border-bottom: 0.5px solid rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.results-table tbody tr:last-child {&#10;    border-bottom: none;&#10;}&#10;&#10;.results-table tbody tr:hover {&#10;    background: rgba(0, 122, 255, 0.05);&#10;}&#10;&#10;.results-table tbody tr.hit {&#10;    background: rgba(52, 199, 89, 0.1);&#10;}&#10;&#10;.results-table tbody tr.miss {&#10;    background: rgba(255, 59, 48, 0.1);&#10;}&#10;&#10;.result-hit {&#10;    color: var(--ios-green);&#10;    font-weight: 700;&#10;}&#10;&#10;.result-miss {&#10;    color: var(--ios-red);&#10;    font-weight: 700;&#10;}&#10;&#10;.results-table th:nth-child(1),&#10;.results-table td:nth-child(1) { width: 20%; }&#10;&#10;.results-table th:nth-child(2),&#10;.results-table td:nth-child(2) { width: 20%; }&#10;&#10;.results-table th:nth-child(3),&#10;.results-table td:nth-child(3) { width: 8%; }&#10;&#10;.results-table th:nth-child(4),&#10;.results-table td:nth-child(4) { width: 12%; }&#10;&#10;.results-table th:nth-child(5),&#10;.results-table td:nth-child(5) { width: 22%; }&#10;&#10;.results-table th:nth-child(6),&#10;.results-table td:nth-child(6) { width: 18%; }&#10;&#10;.empty-state {&#10;    text-align: center;&#10;    padding: 48px 32px;&#10;    color: var(--text-secondary);&#10;    background: rgba(0, 0, 0, 0.02);&#10;    border-radius: var(--ios-radius-medium);&#10;    margin: 16px;&#10;}&#10;&#10;.clear-btn {&#10;    margin-top: 24px;&#10;    padding: 14px 24px;&#10;    background: var(--ios-red);&#10;    color: white;&#10;    border: none;&#10;    border-radius: var(--ios-radius-medium);&#10;    cursor: pointer;&#10;    font-size: 15px;&#10;    font-weight: 600;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    font-family: inherit;&#10;}&#10;&#10;.clear-btn:hover {&#10;    background: #D60A00;&#10;    transform: translateY(-1px);&#10;    box-shadow: 0 4px 16px rgba(255, 59, 48, 0.3);&#10;}&#10;&#10;.modal {&#10;    display: none;&#10;    position: fixed;&#10;    z-index: 2000;&#10;    left: 0;&#10;    top: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    justify-content: center;&#10;    align-items: center;&#10;}&#10;&#10;.modal-backdrop {&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    background: rgba(0, 0, 0, 0.4);&#10;    backdrop-filter: blur(20px);&#10;    -webkit-backdrop-filter: blur(20px);&#10;}&#10;&#10;.modal-content {&#10;    position: relative;&#10;    width: 90%;&#10;    max-width: 400px;&#10;    background: white;&#10;    border-radius: var(--ios-radius-large);&#10;    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);&#10;    animation: modalSlideIn 0.4s var(--ios-ease);&#10;    overflow: hidden;&#10;}&#10;&#10;@keyframes modalSlideIn {&#10;    from {&#10;        opacity: 0;&#10;        transform: scale(0.9) translateY(-20px);&#10;    }&#10;    to {&#10;        opacity: 1;&#10;        transform: scale(1) translateY(0);&#10;    }&#10;}&#10;&#10;.modal-header {&#10;    padding: 24px 24px 12px;&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    border-bottom: 0.5px solid rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.modal-title {&#10;    font-size: 20px;&#10;    font-weight: 700;&#10;    color: var(--text-primary);&#10;}&#10;&#10;.close-btn {&#10;    background: rgba(0, 0, 0, 0.05);&#10;    border: none;&#10;    font-size: 18px;&#10;    color: var(--text-secondary);&#10;    cursor: pointer;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    width: 32px;&#10;    height: 32px;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    border-radius: 50%;&#10;    font-weight: 300;&#10;}&#10;&#10;.close-btn:hover {&#10;    background: rgba(0, 0, 0, 0.1);&#10;    color: var(--text-primary);&#10;}&#10;&#10;.modal-body {&#10;    padding: 12px 24px 24px;&#10;}&#10;&#10;.modal-body p {&#10;    font-size: 17px;&#10;    color: var(--text-primary);&#10;    line-height: 1.5;&#10;    margin: 0;&#10;}&#10;&#10;.modal-actions {&#10;    display: flex;&#10;    gap: 12px;&#10;    margin-top: 24px;&#10;    justify-content: flex-end;&#10;}&#10;&#10;.modal-btn {&#10;    padding: 12px 24px;&#10;    border: none;&#10;    border-radius: var(--ios-radius-medium);&#10;    font-size: 16px;&#10;    font-weight: 600;&#10;    cursor: pointer;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    font-family: inherit;&#10;    min-width: 100px;&#10;}&#10;&#10;.modal-btn-primary {&#10;    background: var(--ios-blue);&#10;    color: white;&#10;}&#10;&#10;.modal-btn-primary:hover {&#10;    background: rgba(0, 102, 204, 1);&#10;    transform: translateY(-1px);&#10;    box-shadow: 0 4px 16px rgba(0, 122, 255, 0.3);&#10;}&#10;&#10;.modal-btn-secondary {&#10;    background: rgba(0, 0, 0, 0.05);&#10;    color: var(--text-primary);&#10;}&#10;&#10;.modal-btn-secondary:hover {&#10;    background: rgba(0, 0, 0, 0.1);&#10;    transform: translateY(-1px);&#10;}&#10;&#10;.error-message {&#10;    color: var(--ios-red);&#10;    font-size: 15px;&#10;    font-weight: 500;&#10;    min-height: 20px;&#10;    opacity: 0;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    padding: 12px 16px;&#10;    border-radius: var(--ios-radius-small);&#10;    background: rgba(255, 59, 48, 0.1);&#10;    border: 1px solid rgba(255, 59, 48, 0.2);&#10;    margin-top: 8px;&#10;}&#10;&#10;.error-message.show {&#10;    opacity: 1;&#10;}&#10;&#10;.form-group.error .ios-input,&#10;.form-group.error .ios-button,&#10;.form-group.error .radio-content {&#10;    border-color: var(--ios-red);&#10;    background: rgba(255, 59, 48, 0.1);&#10;}&#10;&#10;.loading {&#10;    display: none;&#10;    position: fixed;&#10;    z-index: 3000;&#10;    inset: 0;&#10;    background: rgba(255, 255, 255, 0.9);&#10;    backdrop-filter: blur(20px);&#10;    justify-content: center;&#10;    align-items: center;&#10;}&#10;&#10;.loading-content {&#10;    text-align: center;&#10;    background: white;&#10;    padding: 32px;&#10;    border-radius: var(--ios-radius-large);&#10;    box-shadow: var(--ios-shadow-large);&#10;}&#10;&#10;.loading-spinner {&#10;    width: 40px;&#10;    height: 40px;&#10;    border: 3px solid rgba(0, 122, 255, 0.3);&#10;    border-top: 3px solid var(--ios-blue);&#10;    border-radius: 50%;&#10;    animation: spin 1s linear infinite;&#10;    margin: 0 auto 16px;&#10;}&#10;&#10;@keyframes spin {&#10;    0% { transform: rotate(0deg); }&#10;    100% { transform: rotate(360deg); }&#10;}&#10;&#10;.loading-text {&#10;    color: var(--text-primary);&#10;    font-size: 17px;&#10;    font-weight: 600;&#10;    margin: 0;&#10;}&#10;&#10;.truncated-value {&#10;    cursor: help;&#10;    position: relative;&#10;    font-weight: 600;&#10;    transition: all var(--ios-duration) var(--ios-ease);&#10;    padding: 6px 12px;&#10;}&#10;&#10;.value-tooltip {&#10;    position: absolute;&#10;    background: linear-gradient(135deg,&#10;    rgba(255, 255, 255, 0.98) 0%,&#10;    rgba(250, 250, 255, 1) 100%&#10;    );&#10;    backdrop-filter: blur(30px) saturate(180%);&#10;    -webkit-backdrop-filter: blur(30px) saturate(180%);&#10;    border: 1px solid rgba(200, 200, 220, 0.4);&#10;    border-radius: var(--ios-radius-large);&#10;    padding: 24px 28px;&#10;    box-shadow:&#10;            0 16px 48px rgba(0, 0, 0, 0.15),&#10;            0 8px 24px rgba(0, 0, 0, 0.1),&#10;            inset 0 1px 0 rgba(255, 255, 255, 1);&#10;    z-index: 10000;&#10;    pointer-events: auto;&#10;    max-width: 650px;&#10;    min-width: 220px;&#10;    word-wrap: break-word;&#10;    font-family: 'SF Mono', 'Monaco', 'Menlo', 'Courier New', monospace;&#10;    font-size: 15px;&#10;    color: var(--text-primary);&#10;    opacity: 0;&#10;    transform: translateY(-8px) scale(0.92);&#10;    transition: all 0.3s var(--ios-ease);&#10;    letter-spacing: 0.3px;&#10;}&#10;&#10;.value-tooltip.visible {&#10;    opacity: 1;&#10;    transform: translateY(0) scale(1);&#10;}&#10;&#10;.value-tooltip.below {&#10;    transform: translateY(8px) scale(0.92);&#10;}&#10;&#10;.value-tooltip.below.visible {&#10;    transform: translateY(0) scale(1);&#10;}&#10;&#10;.tooltip-header {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    margin-bottom: 12px;&#10;    padding-bottom: 12px;&#10;    border-bottom: 1px solid rgba(115, 37, 252, 0.15);&#10;}&#10;&#10;.tooltip-close {&#10;    background: linear-gradient(135deg, rgba(115, 37, 252, 0.1), rgba(175, 82, 222, 0.1));&#10;    border: 1.5px solid rgba(115, 37, 252, 0.3);&#10;    border-radius: 50%;&#10;    width: 28px;&#10;    height: 28px;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    cursor: pointer;&#10;    transition: all 0.2s var(--ios-ease);&#10;    color: var(--ios-purple);&#10;    font-size: 16px;&#10;    font-weight: 700;&#10;    line-height: 1;&#10;}&#10;&#10;.tooltip-close:hover {&#10;    background: linear-gradient(135deg, rgba(115, 37, 252, 0.2), rgba(175, 82, 222, 0.2));&#10;    border-color: rgba(115, 37, 252, 0.5);&#10;    transform: rotate(90deg) scale(1.1);&#10;}&#10;&#10;.tooltip-arrow {&#10;    position: absolute;&#10;    width: 20px;&#10;    height: 12px;&#10;    bottom: 100%;&#10;    left: 50%;&#10;    transform: translateX(-50%);&#10;    overflow: hidden;&#10;}&#10;&#10;.tooltip-arrow::before {&#10;    content: '';&#10;    position: absolute;&#10;    bottom: 0;&#10;    left: 50%;&#10;    transform: translateX(-50%) rotate(45deg);&#10;    width: 14px;&#10;    height: 14px;&#10;    background: linear-gradient(135deg,&#10;    rgba(255, 255, 255, 0.98),&#10;    rgba(250, 250, 255, 1)&#10;    );&#10;    border: 1px solid rgba(200, 200, 220, 0.4);&#10;    border-bottom: none;&#10;    border-right: none;&#10;    box-shadow: -2px -2px 8px rgba(0, 0, 0, 0.05);&#10;}&#10;&#10;.tooltip-number {&#10;    display: block;&#10;    font-weight: 600;&#10;    font-size: 16px;&#10;    line-height: 1.6;&#10;    background: linear-gradient(135deg, #7325FC, #AF52DE, #5856D6);&#10;    background-clip: text;&#10;    -webkit-background-clip: text;&#10;    -webkit-text-fill-color: transparent;&#10;    word-break: break-all;&#10;    padding-right: 8px;&#10;}&#10;&#10;.tooltip-label {&#10;    display: block;&#10;    font-size: 11px;&#10;    text-transform: uppercase;&#10;    letter-spacing: 1.2px;&#10;    color: rgba(29, 29, 31, 0.5);&#10;    font-weight: 700;&#10;    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', sans-serif;&#10;}&#10;&#10;@media (max-width: 1400px) {&#10;    .main-container {&#10;        grid-template-columns: 1fr;&#10;        grid-template-rows: auto auto auto;&#10;    }&#10;&#10;    .input-section,&#10;    .canvas-section,&#10;    .results-section {&#10;        grid-column: 1;&#10;    }&#10;&#10;    .input-section { grid-row: 1; }&#10;    .canvas-section { grid-row: 2; }&#10;    .results-section { grid-row: 3; }&#10;}&#10;&#10;@media (min-width: 1024px) {&#10;    #coordinatePlane {&#10;        width: 600px;&#10;        height: 600px;&#10;    }&#10;}&#10;&#10;@media (max-width: 1024px) {&#10;    .value-tooltip {&#10;        max-width: 450px;&#10;        font-size: 13px;&#10;        padding: 20px 24px;&#10;    }&#10;&#10;    .tooltip-number {&#10;        font-size: 14px;&#10;    }&#10;&#10;    .x-buttons {&#10;        grid-template-columns: repeat(4, 1fr);&#10;    }&#10;&#10;    .input-group {&#10;        flex-direction: column;&#10;        align-items: stretch;&#10;    }&#10;&#10;    .input-hint {&#10;        min-width: auto;&#10;        width: 100%;&#10;    }&#10;}&#10;&#10;@media (max-width: 1024px) and (min-width: 768px) {&#10;    #coordinatePlane {&#10;        width: 500px;&#10;        height: 500px;&#10;    }&#10;}&#10;&#10;@media (max-width: 768px) {&#10;    #coordinatePlane {&#10;        width: 100%;&#10;        max-width: 500px;&#10;        height: auto;&#10;        aspect-ratio: 1;&#10;    }&#10;&#10;    .canvas-section {&#10;        padding: 24px 16px;&#10;    }&#10;&#10;    .canvas-wrapper {&#10;        width: 100%;&#10;    }&#10;&#10;    .value-tooltip {&#10;        max-width: 350px;&#10;        font-size: 12px;&#10;        padding: 18px 20px;&#10;    }&#10;&#10;    .tooltip-number {&#10;        font-size: 13px;&#10;    }&#10;&#10;    .truncated-value {&#10;        font-size: 14px;&#10;        padding: 4px 10px;&#10;    }&#10;&#10;    .x-buttons {&#10;        grid-template-columns: repeat(3, 1fr);&#10;        gap: 10px;&#10;    }&#10;&#10;    .x-btn {&#10;        min-height: 50px;&#10;        font-size: 15px;&#10;        padding: 12px 16px;&#10;    }&#10;&#10;    .r-radios {&#10;        display: grid;&#10;        grid-template-columns: repeat(3, 1fr);&#10;        gap: 10px;&#10;    }&#10;&#10;    .radio-content {&#10;        padding: 14px 16px;&#10;    }&#10;&#10;    section {&#10;        padding: 24px 16px;&#10;    }&#10;&#10;    .header {&#10;        padding: 16px 5% 20px;&#10;    }&#10;&#10;    .main-title {&#10;        font-size: 24px;&#10;    }&#10;&#10;    .subtitle {&#10;        font-size: 15px;&#10;    }&#10;}&#10;&#10;@media (max-width: 600px) {&#10;    #coordinatePlane {&#10;        width: 100%;&#10;        max-width: 400px;&#10;    }&#10;&#10;    .x-buttons {&#10;        grid-template-columns: repeat(3, 1fr);&#10;        gap: 8px;&#10;    }&#10;&#10;    .x-btn {&#10;        min-height: 48px;&#10;        font-size: 14px;&#10;        padding: 10px 12px;&#10;    }&#10;&#10;    .r-radios {&#10;        grid-template-columns: repeat(2, 1fr);&#10;    }&#10;&#10;    .results-table th,&#10;    .results-table td {&#10;        padding: 12px 8px;&#10;        font-size: 13px;&#10;    }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;    #coordinatePlane {&#10;        width: 100%;&#10;        max-width: 350px;&#10;    }&#10;&#10;    .main-container {&#10;        padding: 0 12px;&#10;    }&#10;&#10;    section {&#10;        padding: 20px 12px;&#10;    }&#10;&#10;    .value-tooltip {&#10;        max-width: 300px;&#10;        padding: 16px 18px;&#10;    }&#10;&#10;    .tooltip-close {&#10;        width: 24px;&#10;        height: 24px;&#10;        font-size: 14px;&#10;    }&#10;&#10;    .x-buttons {&#10;        grid-template-columns: repeat(2, 1fr);&#10;    }&#10;&#10;    .header-content {&#10;        flex-direction: column;&#10;        gap: 16px;&#10;    }&#10;&#10;    .info-card {&#10;        padding: 12px 16px;&#10;    }&#10;&#10;    .main-title {&#10;        font-size: 20px;&#10;    }&#10;&#10;    .results-table {&#10;        font-size: 12px;&#10;    }&#10;&#10;    .results-table th,&#10;    .results-table td {&#10;        padding: 10px 6px;&#10;    }&#10;}&#10;&#10;@media (max-width: 380px) {&#10;    #coordinatePlane {&#10;        width: 100%;&#10;        max-width: 300px;&#10;    }&#10;&#10;    .x-btn {&#10;        min-height: 44px;&#10;        font-size: 13px;&#10;        padding: 8px 10px;&#10;    }&#10;&#10;    .ios-input {&#10;        padding: 14px 16px;&#10;        font-size: 16px;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>